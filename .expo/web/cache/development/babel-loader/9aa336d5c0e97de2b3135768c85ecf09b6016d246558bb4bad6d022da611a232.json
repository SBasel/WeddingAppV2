{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { uploadImage } from \"./UploadImage.js\";\nimport ViewShot from \"react-native-view-shot\";\nimport { FontColorDropdown } from \"./fontHandler/FontColorDropdown.js\";\nimport { FontFamilyDropdown } from \"./fontHandler/FontFamilyDropdown.js\";\nimport { FontSizeDropdown } from \"./fontHandler/FontSizeDropdown.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function ImageEditor(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var imageUri = route.params.imageUri;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditing = _useState2[0],\n    setIsEditing = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState(20),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fontSize = _useState6[0],\n    setFontSize = _useState6[1];\n  var _useState7 = useState({\n      x: 50,\n      y: 50\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    textPosition = _useState8[0],\n    setTextPosition = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    offsetX = _useState10[0],\n    setOffsetX = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    offsetY = _useState12[0],\n    setOffsetY = _useState12[1];\n  var viewShotRef = useRef(null);\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    capturedImage = _useState14[0],\n    setCapturedImage = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isLoading = _useState16[0],\n    setIsLoading = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isModalVisible = _useState18[0],\n    setModalVisible = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isTextModalVisible = _useState20[0],\n    setTextModalVisible = _useState20[1];\n  var _useState21 = useState('black'),\n    _useState22 = _slicedToArray(_useState21, 2),\n    textColor = _useState22[0],\n    setTextColor = _useState22[1];\n  var _useState23 = useState('Arial'),\n    _useState24 = _slicedToArray(_useState23, 2),\n    fontFamily = _useState24[0],\n    setFontFamily = _useState24[1];\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n      setOffsetX(textPosition.x - gestureState.x0);\n      setOffsetY(textPosition.y - gestureState.y0);\n    },\n    onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n      setTextPosition({\n        x: gestureState.moveX + offsetX,\n        y: gestureState.moveY + offsetY\n      });\n    }\n  });\n  var onClose = function onClose() {\n    navigation.goBack();\n  };\n  var onSave = function onSave() {\n    setIsEditing(false);\n  };\n  var onDiskSave = function () {\n    var _ref2 = _asyncToGenerator(function* (imageData) {\n      setIsLoading(true);\n      if (!imageData) {\n        setIsLoading(false);\n        return;\n      }\n      try {\n        yield uploadImage(imageData);\n        console.log(\"Erfolgreich gespeichert!\");\n        setModalVisible(true);\n      } catch (error) {\n        console.log(\"Fehler beim Speichern des Bildes.\");\n      }\n      setIsLoading(false);\n    });\n    return function onDiskSave(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var captureImageWithText = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var dataUri = yield viewShotRef.current.capture({\n          format: 'base64'\n        });\n        console.log(\"Bild erfolgreich erfasst!\");\n        console.log(\"Test\", dataUri);\n        onDiskSave(dataUri);\n      } catch (error) {\n        console.log(\"Fehler beim Erfassen des Bildes: \", error);\n      }\n    });\n    return function captureImageWithText() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    children: _jsxs(View, {\n      style: styles.editorContainer,\n      children: [_jsxs(ViewShot, {\n        ref: viewShotRef,\n        options: {\n          format: \"png\",\n          quality: 1.0,\n          result: \"data-uri\"\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: imageUri\n          },\n          style: {\n            width: Dimensions.get('window').width,\n            height: Dimensions.get('window').height - 100\n          }\n        }), isEditing && _jsx(TextInput, {\n          style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n            fontSize: fontSize,\n            left: textPosition.x,\n            top: textPosition.y\n          }),\n          value: text,\n          onChangeText: setText,\n          placeholder: \"F\\xFCge Text hinzu\",\n          multiline: true\n        }), !isEditing && _jsx(Text, _objectSpread(_objectSpread({}, panResponder.panHandlers), {}, {\n          style: _objectSpread(_objectSpread({}, styles.overlayText), {}, {\n            fontSize: fontSize,\n            left: textPosition.x,\n            top: textPosition.y\n          }),\n          children: text\n        }))]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: isEditing ? _jsx(TouchableOpacity, {\n          onPress: onSave,\n          children: _jsx(FontAwesome5, {\n            name: \"check\",\n            size: 24,\n            color: \"green\"\n          })\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.editcon,\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setTextModalVisible(true);\n              },\n              style: styles.editb,\n              children: _jsx(FontAwesome5, {\n                name: \"pen\",\n                size: 24\n              })\n            })\n          }), _jsx(View, {\n            style: styles.editcon,\n            children: _jsx(TouchableOpacity, {\n              onPress: captureImageWithText,\n              style: styles.editb,\n              children: _jsx(FontAwesome5, {\n                name: \"save\",\n                size: 24\n              })\n            })\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.closeButton,\n        onPress: onClose,\n        children: _jsx(FontAwesome5, {\n          name: \"times\",\n          size: 24,\n          color: \"black\"\n        })\n      }), capturedImage && _jsx(Image, {\n        source: {\n          uri: capturedImage\n        },\n        style: {\n          width: 100,\n          height: 100,\n          position: 'absolute',\n          bottom: 10,\n          right: 10,\n          zIndex: -999\n        }\n      }), isLoading && _jsx(View, {\n        style: _objectSpread(_objectSpread({}, styles.centered), {}, {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)'\n        }),\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\"\n        })\n      }), _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: isTextModalVisible,\n        onRequestClose: function onRequestClose() {\n          setTextModalVisible(!isTextModalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.inputText,\n          children: _jsxs(View, {\n            style: styles.modalInputText,\n            children: [_jsxs(View, {\n              style: styles.dropdownContainer,\n              children: [_jsx(FontSizeDropdown, {\n                style: styles.dropdownItem,\n                value: fontSize,\n                onFontSizeChange: function onFontSizeChange(value) {\n                  return setFontSize(value);\n                }\n              }), _jsx(FontColorDropdown, {\n                style: styles.dropdownItem,\n                color: textColor,\n                onFontColorChange: function onFontColorChange(color) {\n                  return setTextColor(color);\n                }\n              }), _jsx(FontFamilyDropdown, {\n                style: styles.dropdownItem,\n                fontFamily: fontFamily,\n                onFontFamilyChange: function onFontFamilyChange(font) {\n                  return setFontFamily(font);\n                }\n              })]\n            }), _jsx(TextInput, {\n              value: text,\n              onChangeText: setText,\n              placeholder: \"F\\xFCge Text hinzu\",\n              multiline: true,\n              style: {\n                color: textColor,\n                fontSize: fontSize,\n                fontFamily: fontFamily,\n                width: '100%',\n                borderColor: '#ccc',\n                borderWidth: 1,\n                marginBottom: 20\n              }\n            }), _jsx(TouchableOpacity, {\n              style: {\n                marginTop: 10\n              },\n              onPress: function onPress() {\n                setTextModalVisible(!isTextModalVisible);\n              },\n              children: _jsx(Text, {\n                children: \"OK\"\n              })\n            })]\n          })\n        })\n      }), _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: isModalVisible,\n        onRequestClose: function onRequestClose() {\n          setModalVisible(!isModalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centered,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsx(Text, {\n              children: \"Bild erfolgreich gespeichert!\"\n            }), _jsx(TouchableOpacity, {\n              style: {\n                marginTop: 10\n              },\n              onPress: function onPress() {\n                setModalVisible(!isModalVisible);\n                navigation.navigate('Camera');\n              },\n              children: _jsx(Text, {\n                children: \"OK\"\n              })\n            })]\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  editorContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInput: {\n    position: 'absolute',\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 4,\n    zIndex: 5,\n    paddingHorizontal: 5,\n    minWidth: 150,\n    maxWidth: Dimensions.get('window').width - 40\n  },\n  overlayText: {\n    position: 'absolute',\n    color: 'black',\n    zIndex: 5\n  },\n  buttonContainer: {\n    position: 'absolute',\n    right: 10,\n    bottom: 40,\n    flexDirection: 'column',\n    alignItems: 'center',\n    zIndex: 10\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 20,\n    right: 20\n  },\n  editcon: {\n    width: \"50\",\n    height: \"50\",\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    marginBottom: 20\n  },\n  editb: {\n    color: \"black\",\n    padding: 10\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    elevation: 5\n  },\n  inputText: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    marginTop: -100\n  },\n  modalInputText: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: \"white\",\n    padding: 35,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 20\n  },\n  dropdownItem: {\n    width: '30%',\n    margin: 5\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","Image","TextInput","StyleSheet","TouchableOpacity","Text","Dimensions","PanResponder","KeyboardAvoidingView","Platform","Modal","ActivityIndicator","Slider","Picker","FontAwesome5","uploadImage","ViewShot","FontColorDropdown","FontFamilyDropdown","FontSizeDropdown","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ImageEditor","_ref","route","navigation","imageUri","params","_useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","text","setText","_useState5","_useState6","fontSize","setFontSize","_useState7","x","y","_useState8","textPosition","setTextPosition","_useState9","_useState10","offsetX","setOffsetX","_useState11","_useState12","offsetY","setOffsetY","viewShotRef","_useState13","_useState14","capturedImage","setCapturedImage","_useState15","_useState16","isLoading","setIsLoading","_useState17","_useState18","isModalVisible","setModalVisible","_useState19","_useState20","isTextModalVisible","setTextModalVisible","_useState21","_useState22","textColor","setTextColor","_useState23","_useState24","fontFamily","setFontFamily","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","evt","gestureState","x0","y0","onPanResponderMove","moveX","moveY","onClose","goBack","onSave","onDiskSave","_ref2","_asyncToGenerator","imageData","console","log","error","_x","apply","arguments","captureImageWithText","_ref3","dataUri","current","capture","format","style","flex","behavior","OS","children","styles","editorContainer","ref","options","quality","result","source","uri","width","get","height","_objectSpread","textInput","left","top","value","onChangeText","placeholder","multiline","panHandlers","overlayText","buttonContainer","onPress","name","size","color","editcon","editb","closeButton","position","bottom","right","zIndex","centered","backgroundColor","animationType","transparent","visible","onRequestClose","inputText","modalInputText","dropdownContainer","dropdownItem","onFontSizeChange","onFontColorChange","onFontFamilyChange","font","borderColor","borderWidth","marginBottom","marginTop","modalView","navigate","alignItems","justifyContent","borderRadius","paddingHorizontal","minWidth","maxWidth","flexDirection","padding","margin","elevation"],"sources":["/home/dci-student/DCIFolder/WAppV2/WeddingApp2.0/comp/Camera/ImageEditor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Image, TextInput, StyleSheet, TouchableOpacity, Text, Dimensions, PanResponder, KeyboardAvoidingView, Platform, Modal, ActivityIndicator, Slider, Picker } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { uploadImage } from './UploadImage.js';\nimport ViewShot from \"react-native-view-shot\";\nimport { FontColorDropdown } from './fontHandler/FontColorDropdown.js';\nimport { FontFamilyDropdown } from './fontHandler/FontFamilyDropdown.js';\nimport { FontSizeDropdown } from './fontHandler/FontSizeDropdown.js';\n\n\nexport function ImageEditor({ route, navigation }) {\n    const { imageUri } = route.params;\n    const [isEditing, setIsEditing] = useState(false);\n    const [text, setText] = useState('');\n    const [fontSize, setFontSize] = useState(20);\n    const [textPosition, setTextPosition] = useState({ x: 50, y: 50 });\n    const [offsetX, setOffsetX] = useState(0);\n    const [offsetY, setOffsetY] = useState(0);\n    const viewShotRef = useRef(null);\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isTextModalVisible, setTextModalVisible] = useState(false);\n    const [textColor, setTextColor] = useState('black'); \n    const [fontFamily, setFontFamily] = useState('Arial'); \n\n\n\n    const panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: () => true,\n        onPanResponderGrant: (evt, gestureState) => {\n            setOffsetX(textPosition.x - gestureState.x0);\n            setOffsetY(textPosition.y - gestureState.y0);\n        },\n        onPanResponderMove: (evt, gestureState) => {\n            setTextPosition({\n                x: gestureState.moveX + offsetX,\n                y: gestureState.moveY + offsetY\n            });\n        },\n    });\n\n    const onClose = () => {\n        navigation.goBack();\n    }\n\n    const onSave = () => {\n        setIsEditing(false);\n    } \n\n    const onDiskSave = async (imageData) => {\n        setIsLoading(true);\n\n        if (!imageData) {\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            await uploadImage(imageData);\n            console.log(\"Erfolgreich gespeichert!\");\n            setModalVisible(true);\n        } catch (error) {\n            console.log(\"Fehler beim Speichern des Bildes.\");\n        }\n\n        setIsLoading(false);\n    }\n\n\n\n    const captureImageWithText = async () => {\n        try {\n            const dataUri = await viewShotRef.current.capture({ format: 'base64' });\n            console.log(\"Bild erfolgreich erfasst!\");\n            console.log(\"Test\", dataUri)\n            onDiskSave(dataUri);\n        } catch (error) {\n            console.log(\"Fehler beim Erfassen des Bildes: \", error);\n        }\n    };\n\n\n\n\n\n\n    return (\n        <KeyboardAvoidingView \n        style={{ flex: 1 }} \n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n        <View style={styles.editorContainer}>\n            <ViewShot ref={viewShotRef} options={{ format: \"png\", quality: 1.0, result: \"data-uri\" }}>\n            <Image source={{ uri: imageUri }} style={{ width: Dimensions.get('window').width, height: Dimensions.get('window').height - 100 }} />\n            \n            {isEditing && (\n                <TextInput\n                    style={{...styles.textInput, fontSize: fontSize, left: textPosition.x, top: textPosition.y}}\n                    value={text}\n                    onChangeText={setText}\n                    placeholder=\"Füge Text hinzu\"\n                    multiline={true}\n                />\n            )}\n            \n            {!isEditing && (\n                <Text {...panResponder.panHandlers} style={{...styles.overlayText, fontSize: fontSize, left: textPosition.x, top: textPosition.y}}>{text}</Text>\n            )}\n            </ViewShot>\n            <View style={styles.buttonContainer}>\n                {isEditing ? (\n                    <TouchableOpacity onPress={onSave}>\n                        <FontAwesome5 name=\"check\" size={24} color=\"green\" />\n                    </TouchableOpacity>\n                ) : (\n                    <>\n                    <View style={styles.editcon}>\n                        <TouchableOpacity onPress={() => setTextModalVisible(true)} style={styles.editb} >\n                            <FontAwesome5 name=\"pen\" size={24} />\n                        </TouchableOpacity>\n                        </View>  \n                    <View style={styles.editcon}>    \n                        <TouchableOpacity onPress={captureImageWithText } style={styles.editb}>\n                            <FontAwesome5 name=\"save\" size={24}   />\n                        </TouchableOpacity>\n                        </View>\n                    </>\n                )}\n            </View>\n\n            <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                <FontAwesome5 name=\"times\" size={24} color=\"black\" />\n            </TouchableOpacity>\n            {capturedImage && (\n            <Image source={{ uri: capturedImage }} style={{ width: 100, height: 100, position: 'absolute', bottom: 10, right: 10, zIndex: -999}} />\n        )}\n        {isLoading && (\n            <View style={{...styles.centered, position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0,0,0,0.5)'}}>\n                <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n            </View>\n        )}\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isTextModalVisible}\n            onRequestClose={() => {\n                setTextModalVisible(!isTextModalVisible);\n            }}\n        >\n            <View style={styles.inputText}>\n                <View style={styles.modalInputText}>\n                    {/* Dropdown-Container */}\n                    <View style={styles.dropdownContainer}>\n                        {/* Schriftgröße ändern */}\n                        <FontSizeDropdown style={styles.dropdownItem}\n                            value={fontSize}\n                            onFontSizeChange={value => setFontSize(value)}\n                        />\n\n                        {/* Textfarbe ändern */}\n                        <FontColorDropdown style={styles.dropdownItem}\n                            color={textColor}\n                            onFontColorChange={color => setTextColor(color)}\n                        />\n\n                        {/* Schriftart ändern */}\n                        <FontFamilyDropdown style={styles.dropdownItem}\n                            fontFamily={fontFamily}\n                            onFontFamilyChange={font => setFontFamily(font)}\n                        />\n                    </View>\n\n                    {/* TextInput */}\n                    <TextInput\n                        value={text}\n                        onChangeText={setText}\n                        placeholder=\"Füge Text hinzu\"\n                        multiline={true}\n                        style={{ \n                            color: textColor, \n                            fontSize: fontSize, \n                            fontFamily: fontFamily, \n                            width: '100%', // Damit es die volle Breite ausfüllt\n                            borderColor: '#ccc',\n                            borderWidth: 1,\n                            marginBottom: 20, // Abstand zwischen Input-Feld und Button\n                        }}\n                    />\n                    \n                    {/* Bestätigen Button */}\n                    <TouchableOpacity\n                        style={{ marginTop: 10 }}\n                        onPress={() => {\n                            setTextModalVisible(!isTextModalVisible);\n                        }}\n                    >\n                        <Text>OK</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n\n\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isModalVisible}\n            onRequestClose={() => {\n                setModalVisible(!isModalVisible);\n            }}\n        >\n            <View style={styles.centered}>\n                <View style={styles.modalView}>\n                    <Text>Bild erfolgreich gespeichert!</Text>\n                    <TouchableOpacity\n                        style={{ marginTop: 10 }}\n                        onPress={() => {\n                            setModalVisible(!isModalVisible);\n                            navigation.navigate('Camera'); // Navigiere zurück zur Camera\n                        }}\n                    >\n                        <Text>OK</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n        </View>\n        </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    editorContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    textInput: {\n    position: 'absolute',\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 4,\n    zIndex: 5,\n    paddingHorizontal: 5, \n    minWidth: 150, \n    maxWidth: Dimensions.get('window').width - 40,\n},\n    overlayText: {\n        position: 'absolute',\n        color: 'black',\n        zIndex: 5, \n    },\n    buttonContainer: {\n        position: 'absolute',\n        right: 10,\n        bottom: 40,\n        flexDirection: 'column',\n        alignItems: 'center',\n        zIndex: 10,\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 20, \n        right: 20,\n    },\n    editcon:{\n        width: \"50\",\n        height: \"50\",\n        backgroundColor: \"white\",\n        borderRadius: 50,\n        marginBottom: 20,\n    },\n    editb: {\n        color: \"black\",\n        padding: 10,\n    },\n    centered: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        elevation: 5\n    },\n    inputText: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'rgba(0,0,0,0.8)',  // Semi-transparenter Hintergrund\n    marginTop: -100,  // Um das Modal nach oben zu verschieben\n    },\n    modalInputText: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: \"white\",\n    padding: 35,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    },\n    dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 20,  // Abstand zwischen den Dropdowns und dem Input-Feld               \n    },\n    dropdownItem: {  // Neuer Stil für die einzelnen Dropdowns\n        width: '30%',  // Gib jeder Dropdown 30% der Breite\n        margin: 5,  // Ein bisschen Abstand zwischen den Dropdowns\n    },\n});\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { auth } from \"../comp/firbase/firebase.settings\";\nimport { signInThisUserWithEmailAndPassword } from \"../comp/firbase/auth/auth.emailAndPassword\";\nimport { SignInWithGooglePopup } from \"../comp/firbase/auth/auth.googlePopup\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Login() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  var _React$useState5 = React.useState(''),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    err = _React$useState6[0],\n    setErr = _React$useState6[1];\n  var navigation = useNavigation();\n  var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  var handleEmailLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!email) {\n        setErr(\"The Email field must not be empty.\");\n        return;\n      }\n      if (!emailRegex.test(email)) {\n        setErr(\"The email must be a valid email format.\");\n        return;\n      }\n      if (!password) {\n        setErr(\"The Password field must not be empty.\");\n        return;\n      }\n      try {\n        yield signInThisUserWithEmailAndPassword(email, password);\n        navigation.navigate('UserHome');\n      } catch (error) {\n        console.error(\"Error logging in with email and password:\", error);\n      }\n    });\n    return function handleEmailLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Login to TSM2.0\"\n    }), err ? _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: err\n    }) : null, _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(Button, {\n      title: \"Login with Email\",\n      onPress: handleEmailLogin\n    }), _jsx(Button, {\n      title: \"Login with Google\",\n      onPress: function onPress() {\n        return SignInWithGooglePopup(navigation);\n      }\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontSize: 24\n  }\n});","map":{"version":3,"names":["React","View","Text","Button","TextInput","StyleSheet","auth","signInThisUserWithEmailAndPassword","SignInWithGooglePopup","useNavigation","jsx","_jsx","jsxs","_jsxs","Login","_React$useState","useState","_React$useState2","_slicedToArray","email","setEmail","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","err","setErr","navigation","emailRegex","handleEmailLogin","_ref","_asyncToGenerator","test","navigate","error","console","apply","arguments","style","styles","container","children","heading","color","placeholder","value","onChangeText","borderWidth","width","marginBottom","secureTextEntry","title","onPress","create","flex","backgroundColor","alignItems","justifyContent","fontSize"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/comp/Login.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Button, TextInput, StyleSheet } from 'react-native';\nimport { auth } from \"../comp/firbase/firebase.settings\";\nimport { signInThisUserWithEmailAndPassword } from '../comp/firbase/auth/auth.emailAndPassword';\nimport { SignInWithGooglePopup } from '../comp/firbase/auth/auth.googlePopup';\nimport { useNavigation } from '@react-navigation/native';\n\n\nexport function Login() {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [err, setErr] = React.useState('');\n  const navigation = useNavigation();\n\n\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\nconst handleEmailLogin = async () => {\n    if (!email) {\n        setErr(\"The Email field must not be empty.\");\n        return;\n    }\n    if (!emailRegex.test(email)) {\n        setErr(\"The email must be a valid email format.\");\n        return;\n    }\n    if (!password) {\n        setErr(\"The Password field must not be empty.\");\n        return;\n    }\n    try {\n        await signInThisUserWithEmailAndPassword(email, password);\n        navigation.navigate('UserHome');\n    } catch (error) {\n        console.error(\"Error logging in with email and password:\", error);\n    }\n};\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Login to TSM2.0</Text>\n      {err ? <Text style={{color: 'red'}}>{err}</Text> : null}\n      <TextInput\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <Button title=\"Login with Email\" onPress={handleEmailLogin} />\n      <Button title=\"Login with Google\" onPress={() => SignInWithGooglePopup(navigation)} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  heading: {\n    fontSize: 24,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
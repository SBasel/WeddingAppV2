{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Home } from \"./comp/Home\";\nimport { SignUp } from \"./comp/SignUp\";\nimport App from \"./App\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport function RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: function options(_ref) {\n        var navigation = _ref.navigation;\n        return {\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                marginRight: 10\n              },\n              children: [_jsx(Pressable, {\n                onPress: function onPress() {\n                  return navigation.navigate('Login');\n                },\n                style: function style(_ref2) {\n                  var pressed = _ref2.pressed;\n                  return {\n                    backgroundColor: pressed ? 'rgba(0, 123, 255, 0.1)' : 'transparent',\n                    padding: 10\n                  };\n                },\n                children: function children(_ref3) {\n                  var pressed = _ref3.pressed;\n                  return _jsx(Text, {\n                    style: {\n                      color: pressed ? '#007BFF' : '#000'\n                    },\n                    children: \"Login\"\n                  });\n                }\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  return navigation.navigate('SignUp');\n                },\n                style: function style(_ref4) {\n                  var pressed = _ref4.pressed;\n                  return {\n                    backgroundColor: pressed ? 'rgba(40, 167, 69, 0.1)' : 'transparent',\n                    padding: 10,\n                    marginLeft: 10\n                  };\n                },\n                children: function children(_ref5) {\n                  var pressed = _ref5.pressed;\n                  return _jsx(Text, {\n                    style: {\n                      color: pressed ? '#28a745' : '#000'\n                    },\n                    children: \"SignUp\"\n                  });\n                }\n              })]\n            });\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: App\n    }), _jsx(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUp\n    })]\n  });\n}","map":{"version":3,"names":["React","createStackNavigator","Home","SignUp","App","View","Text","Pressable","jsx","_jsx","jsxs","_jsxs","Stack","RootNavigator","Navigator","initialRouteName","children","Screen","name","component","options","_ref","navigation","headerRight","style","flexDirection","marginRight","onPress","navigate","_ref2","pressed","backgroundColor","padding","_ref3","color","_ref4","marginLeft","_ref5"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/RootNavigator.js"],"sourcesContent":["\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Home } from './comp/Home';\nimport { SignUp } from './comp/SignUp';\nimport App from './App';\nimport { View, Text, Pressable } from 'react-native';\n\n\nconst Stack = createStackNavigator();\n\nexport function RootNavigator() {\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen \n        name=\"Home\" \n        component={Home}\n        options={({ navigation }) => ({\n          headerRight: () => (\n            <View style={{ flexDirection: 'row', marginRight: 10 }}>\n              <Pressable \n                onPress={() => navigation.navigate('Login')}\n                style={({ pressed }) => ({\n                  backgroundColor: pressed ? 'rgba(0, 123, 255, 0.1)' : 'transparent',\n                  padding: 10,\n                })}\n              >\n                {({ pressed }) => <Text style={{ color: pressed ? '#007BFF' : '#000' }}>Login</Text>}\n              </Pressable>\n              <Pressable \n                onPress={() => navigation.navigate('SignUp')}\n                style={({ pressed }) => ({\n                  backgroundColor: pressed ? 'rgba(40, 167, 69, 0.1)' : 'transparent',\n                  padding: 10,\n                  marginLeft: 10,\n                })}\n              >\n                {({ pressed }) => <Text style={{ color: pressed ? '#28a745' : '#000' }}>SignUp</Text>}\n              </Pressable>\n            </View>\n          ),\n        })}\n      />\n      <Stack.Screen name=\"Login\" component={App} />\n      <Stack.Screen name=\"SignUp\" component={SignUp} />\n    </Stack.Navigator>\n  );\n}\n\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,IAAI;AACb,SAASC,MAAM;AACf,OAAOC,GAAG;AAAc,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIxB,IAAMC,KAAK,GAAGX,oBAAoB,CAAC,CAAC;AAEpC,OAAO,SAASY,aAAaA,CAAA,EAAG;EAC9B,OACEF,KAAA,CAACC,KAAK,CAACE,SAAS;IAACC,gBAAgB,EAAC,MAAM;IAAAC,QAAA,GACtCP,IAAA,CAACG,KAAK,CAACK,MAAM;MACXC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEjB,IAAK;MAChBkB,OAAO,EAAE,SAAAA,QAAAC,IAAA;QAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;QAAA,OAAQ;UAC5BC,WAAW,EAAE,SAAAA,YAAA;YAAA,OACXZ,KAAA,CAACN,IAAI;cAACmB,KAAK,EAAE;gBAAEC,aAAa,EAAE,KAAK;gBAAEC,WAAW,EAAE;cAAG,CAAE;cAAAV,QAAA,GACrDP,IAAA,CAACF,SAAS;gBACRoB,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAML,UAAU,CAACM,QAAQ,CAAC,OAAO,CAAC;gBAAA,CAAC;gBAC5CJ,KAAK,EAAE,SAAAA,MAAAK,KAAA;kBAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;kBAAA,OAAQ;oBACvBC,eAAe,EAAED,OAAO,GAAG,wBAAwB,GAAG,aAAa;oBACnEE,OAAO,EAAE;kBACX,CAAC;gBAAA,CAAE;gBAAAhB,QAAA,EAEF,SAAAA,SAAAiB,KAAA;kBAAA,IAAGH,OAAO,GAAAG,KAAA,CAAPH,OAAO;kBAAA,OAAOrB,IAAA,CAACH,IAAI;oBAACkB,KAAK,EAAE;sBAAEU,KAAK,EAAEJ,OAAO,GAAG,SAAS,GAAG;oBAAO,CAAE;oBAAAd,QAAA,EAAC;kBAAK,CAAM,CAAC;gBAAA;cAAA,CAC3E,CAAC,EACZP,IAAA,CAACF,SAAS;gBACRoB,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAML,UAAU,CAACM,QAAQ,CAAC,QAAQ,CAAC;gBAAA,CAAC;gBAC7CJ,KAAK,EAAE,SAAAA,MAAAW,KAAA;kBAAA,IAAGL,OAAO,GAAAK,KAAA,CAAPL,OAAO;kBAAA,OAAQ;oBACvBC,eAAe,EAAED,OAAO,GAAG,wBAAwB,GAAG,aAAa;oBACnEE,OAAO,EAAE,EAAE;oBACXI,UAAU,EAAE;kBACd,CAAC;gBAAA,CAAE;gBAAApB,QAAA,EAEF,SAAAA,SAAAqB,KAAA;kBAAA,IAAGP,OAAO,GAAAO,KAAA,CAAPP,OAAO;kBAAA,OAAOrB,IAAA,CAACH,IAAI;oBAACkB,KAAK,EAAE;sBAAEU,KAAK,EAAEJ,OAAO,GAAG,SAAS,GAAG;oBAAO,CAAE;oBAAAd,QAAA,EAAC;kBAAM,CAAM,CAAC;gBAAA;cAAA,CAC5E,CAAC;YAAA,CACR,CAAC;UAAA;QAEX,CAAC;MAAA;IAAE,CACJ,CAAC,EACFP,IAAA,CAACG,KAAK,CAACK,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEf;IAAI,CAAE,CAAC,EAC7CK,IAAA,CAACG,KAAK,CAACK,MAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAEhB;IAAO,CAAE,CAAC;EAAA,CAClC,CAAC;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontColorDropdown } from \"./fontHandler/FontColorDropdown.js\";\nimport { FontFamilyDropdown } from \"./fontHandler/FontFamilyDropdown.js\";\nimport { FontSizeDropdown } from \"./fontHandler/FontSizeDropdown.js\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function TextEditor(_ref) {\n  var text = _ref.text,\n    setText = _ref.setText,\n    textColor = _ref.textColor,\n    setTextColor = _ref.setTextColor,\n    fontFamily = _ref.fontFamily,\n    setFontFamily = _ref.setFontFamily,\n    fontSize = _ref.fontSize,\n    setFontSize = _ref.setFontSize;\n  var navigation = useNavigation();\n  var _useState = useState('black'),\n    _useState2 = _slicedToArray(_useState, 2),\n    localtextColor = _useState2[0],\n    setlocalTextColor = _useState2[1];\n  var _useState3 = useState('Arial'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    localfontFamily = _useState4[0],\n    setlocalFontFamily = _useState4[1];\n  var _useState5 = useState(20),\n    _useState6 = _slicedToArray(_useState5, 2),\n    localfontSize = _useState6[0],\n    setlocalFontSize = _useState6[1];\n  return _jsx(View, {\n    style: styles.inputText,\n    children: _jsxs(View, {\n      style: styles.modalInputText,\n      children: [_jsxs(View, {\n        style: styles.dropdownContainer,\n        children: [_jsx(FontSizeDropdown, {\n          style: styles.dropdownItem,\n          value: fontSize,\n          onFontSizeChange: function onFontSizeChange(value) {\n            return setlocalFontSize(value);\n          }\n        }), _jsx(FontColorDropdown, {\n          style: styles.dropdownItem,\n          color: textColor,\n          onFontColorChange: function onFontColorChange(color) {\n            return setlocalTextColor(color);\n          }\n        }), _jsx(FontFamilyDropdown, {\n          style: styles.dropdownItem,\n          fontFamily: fontFamily,\n          onFontFamilyChange: function onFontFamilyChange(font) {\n            return setlocalFontFamily(font);\n          }\n        })]\n      }), _jsx(TextInput, {\n        value: text,\n        onChangeText: setText,\n        placeholder: \"F\\xFCge Text hinzu\",\n        multiline: true,\n        style: {\n          color: localtextColor,\n          fontSize: localfontSize,\n          fontFamily: localfontFamily,\n          width: '100%',\n          borderColor: '#ccc',\n          borderWidth: 1,\n          marginBottom: 20\n        }\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginTop: 10\n        },\n        onPress: function onPress() {\n          return navigation.navigate('ImageEditor', {\n            imageUri: imageUri\n          });\n        },\n        children: _jsx(FontAwesome5, {\n          name: \"check\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  inputText: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    border: \"solid red\"\n  },\n  modalInputText: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 35,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 0,\n    width: '100%'\n  },\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 20\n  },\n  dropdownItem: {\n    width: '30%',\n    margin: 5\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","StyleSheet","FontAwesome5","FontColorDropdown","FontFamilyDropdown","FontSizeDropdown","useNavigation","jsx","_jsx","jsxs","_jsxs","TextEditor","_ref","text","setText","textColor","setTextColor","fontFamily","setFontFamily","fontSize","setFontSize","navigation","_useState","_useState2","_slicedToArray","localtextColor","setlocalTextColor","_useState3","_useState4","localfontFamily","setlocalFontFamily","_useState5","_useState6","localfontSize","setlocalFontSize","style","styles","inputText","children","modalInputText","dropdownContainer","dropdownItem","value","onFontSizeChange","color","onFontColorChange","onFontFamilyChange","font","onChangeText","placeholder","multiline","width","borderColor","borderWidth","marginBottom","marginTop","onPress","navigate","imageUri","name","size","create","flex","justifyContent","alignItems","backgroundColor","position","top","bottom","left","right","border","padding","margin","flexDirection"],"sources":["/home/dci-student/DCIFolder/WAppV2/WeddingApp2.0/comp/Camera/TextEditor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontColorDropdown } from './fontHandler/FontColorDropdown.js';\nimport { FontFamilyDropdown } from './fontHandler/FontFamilyDropdown.js';\nimport { FontSizeDropdown } from './fontHandler/FontSizeDropdown.js';\nimport { useNavigation } from '@react-navigation/native';\n\nexport function TextEditor({ \n    text, \n    setText, \n    textColor, \n    setTextColor, \n    fontFamily, \n    setFontFamily, \n    fontSize, \n    setFontSize \n}) {\n    const navigation = useNavigation();\n    const [localtextColor, setlocalTextColor] = useState('black'); \n    const [localfontFamily, setlocalFontFamily] = useState('Arial');\n    const [localfontSize, setlocalFontSize] = useState(20);\n    return (\n        <View style={styles.inputText}>\n            <View style={styles.modalInputText}>\n                <View style={styles.dropdownContainer}>\n                    <FontSizeDropdown \n                        style={styles.dropdownItem}\n                        value={fontSize}\n                        onFontSizeChange={value => setlocalFontSize(value)}\n                    />\n                    <FontColorDropdown \n                        style={styles.dropdownItem}\n                        color={textColor}\n                        onFontColorChange={color => setlocalTextColor(color)}\n                    />\n                    <FontFamilyDropdown \n                        style={styles.dropdownItem}\n                        fontFamily={fontFamily}\n                        onFontFamilyChange={font => setlocalFontFamily(font)}\n                    />\n                </View>\n                <TextInput\n                    value={text}\n                    onChangeText={setText}\n                    placeholder=\"Füge Text hinzu\"\n                    multiline={true}\n                    style={{ \n                        color: localtextColor, \n                        fontSize: localfontSize, \n                        fontFamily: localfontFamily, \n                        width: '100%',\n                        borderColor: '#ccc',\n                        borderWidth: 1,\n                        marginBottom: 20,\n                    }}\n                />\n                <TouchableOpacity\n                    style={{ marginTop: 10 }}\n                    onPress={() => navigation.navigate('ImageEditor', { imageUri: imageUri })}\n                >\n                    <FontAwesome5 name=\"check\" size={24} color=\"black\" />\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputText: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: 'transparent', // Hintergrundfarbe, falls gewünscht\n        position: 'absolute', // Absolute Positionierung hinzufügen\n        top: 0, \n        bottom: 0, \n        left: 0, \n        right: 0,\n        border: \"solid red\"\n    },\n    modalInputText: {\n        flex: 1, \n        backgroundColor: \"white\",\n        padding: 35,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: 0, // Entfernt jeglichen Abstand\n        width: '100%' // Stellt sicher, dass es die volle Breite einnimmt\n    },\n    dropdownContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        marginBottom: 20,\n    },\n    dropdownItem: {  \n        width: '30%', \n        margin: 5,\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createNewUserWithEmailAndPassword } from \"../firbase/auth/auth.emailAndPassword\";\nimport { SignInWithGooglePopup } from \"../firbase/auth/auth.googlePopup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState({\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formValue = _React$useState2[0],\n    setFormValue = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    err = _React$useState4[0],\n    setErr = _React$useState4[1];\n  var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  var handleEmailSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      switch (true) {\n        case !formValue.email:\n          setErr(\"The Email field must not be empty.\");\n          return;\n        case !emailRegex.test(formValue.email):\n          setErr(\"The email must be a valid email format.\");\n          return;\n        case !formValue.password:\n          setErr(\"The Password field must not be empty.\");\n          return;\n        case !formValue.confirmPassword:\n          setErr(\"The Confirm Password field must not be empty.\");\n          return;\n        case formValue.password.length < 8:\n          setErr(\"The password must be at least 8 characters.\");\n          return;\n        case formValue.password !== formValue.confirmPassword:\n          setErr(\"The passwords do not match.\");\n          return;\n      }\n      try {\n        yield createNewUserWithEmailAndPassword(formValue.email, formValue.password);\n      } catch (error) {\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n            setErr(\"This email already exists\");\n            break;\n          case \"auth/invalid-email\":\n            setErr(\"The email is invalid\");\n            break;\n          case \"auth/operation-not-allowed\":\n            setErr(\"An error has occurred here. Please contact support. [Operation not allowed]\");\n            break;\n          case \"auth/weak-password\":\n            setErr(\"The password is too weak\");\n            break;\n          default:\n            setErr(error.code);\n            break;\n        }\n      }\n    });\n    return function handleEmailSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Sign Up for TSM2.0\"\n    }), err ? _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: err\n    }) : null, _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: formValue.email,\n      onChangeText: function onChangeText(text) {\n        return setFormValue(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            email: text\n          });\n        });\n      },\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: formValue.password,\n      onChangeText: function onChangeText(text) {\n        return setFormValue(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            password: text\n          });\n        });\n      },\n      secureTextEntry: true,\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Confirm Password\",\n      value: formValue.confirmPassword,\n      onChangeText: function onChangeText(text) {\n        return setFormValue(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            confirmPassword: text\n          });\n        });\n      },\n      secureTextEntry: true,\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up with Email\",\n      onPress: handleEmailSignUp\n    }), _jsx(Button, {\n      title: \"Sign Up with Google\",\n      onPress: SignInWithGooglePopup\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontSize: 24\n  }\n});","map":{"version":3,"names":["React","View","Text","Button","TextInput","StyleSheet","createNewUserWithEmailAndPassword","SignInWithGooglePopup","jsx","_jsx","jsxs","_jsxs","SignUp","_ref","navigation","_React$useState","useState","email","password","confirmPassword","_React$useState2","_slicedToArray","formValue","setFormValue","_React$useState3","_React$useState4","err","setErr","emailRegex","handleEmailSignUp","_ref2","_asyncToGenerator","test","length","error","code","apply","arguments","style","styles","container","children","heading","color","placeholder","value","onChangeText","text","prev","_objectSpread","borderWidth","width","marginBottom","secureTextEntry","title","onPress","create","flex","backgroundColor","alignItems","justifyContent","fontSize"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/comp/SignUp/SignUp.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Button, TextInput, StyleSheet } from 'react-native';\n\nimport { createNewUserWithEmailAndPassword } from '../firbase/auth/auth.emailAndPassword';\nimport { SignInWithGooglePopup } from '../firbase/auth/auth.googlePopup';\n\nexport function SignUp({ navigation }) {\n  const [formValue, setFormValue] = React.useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [err, setErr] = React.useState('');\n\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  const handleEmailSignUp = async () => {\n    switch (true) {\n      case !formValue.email:\n        setErr(\"The Email field must not be empty.\");\n        return;\n      case !emailRegex.test(formValue.email):\n        setErr(\"The email must be a valid email format.\");\n        return;\n      case !formValue.password:\n        setErr(\"The Password field must not be empty.\");\n        return;\n      case !formValue.confirmPassword:\n        setErr(\"The Confirm Password field must not be empty.\");\n        return;\n      case formValue.password.length < 8:\n        setErr(\"The password must be at least 8 characters.\");\n        return;\n      case formValue.password !== formValue.confirmPassword:\n        setErr(\"The passwords do not match.\");\n        return;\n    }\n\n    try {\n      await createNewUserWithEmailAndPassword(formValue.email, formValue.password);\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n          setErr(\"This email already exists\");\n          break;\n        case \"auth/invalid-email\":\n          setErr(\"The email is invalid\");\n          break;\n        case \"auth/operation-not-allowed\":\n          setErr(\"An error has occurred here. Please contact support. [Operation not allowed]\");\n          break;\n        case \"auth/weak-password\":\n          setErr(\"The password is too weak\");\n          break;\n        default:\n          setErr(error.code);\n          break;\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Sign Up for TSM2.0</Text>\n      {err ? <Text style={{color: 'red'}}>{err}</Text> : null}\n      <TextInput\n        placeholder=\"Email\"\n        value={formValue.email}\n        onChangeText={(text) => setFormValue(prev => ({ ...prev, email: text }))}\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        value={formValue.password}\n        onChangeText={(text) => setFormValue(prev => ({ ...prev, password: text }))}\n        secureTextEntry\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <TextInput\n        placeholder=\"Confirm Password\"\n        value={formValue.confirmPassword}\n        onChangeText={(text) => setFormValue(prev => ({ ...prev, confirmPassword: text }))}\n        secureTextEntry\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <Button title=\"Sign Up with Email\" onPress={handleEmailSignUp} />\n      <Button title=\"Sign Up with Google\" onPress={SignInWithGooglePopup} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  heading: {\n    fontSize: 24,\n  },\n});\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
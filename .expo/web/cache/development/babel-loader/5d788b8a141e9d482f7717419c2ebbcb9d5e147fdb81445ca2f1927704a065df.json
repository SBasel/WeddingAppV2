{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { auth } from \"../comp/firbase/firebase.settings\";\nimport { createNewUserWithEmailAndPassword } from \"../comp/firbase/auth/auth.emailAndPassword\";\nimport { SignInWithGooglePopup } from \"../comp/firbase/auth/auth.googlePopup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUp() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  var _React$useState5 = React.useState(''),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    err = _React$useState6[0],\n    setErr = _React$useState6[1];\n  var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  var handleEmailSignUp = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!emailRegex.test(email)) {\n        setErr(\"Die E-Mail muss einem gültigen E-Mail-Format entsprechen.\");\n        return;\n      }\n      if (!password) {\n        setErr(\"Das Passwortfeld darf nicht leer sein.\");\n        return;\n      }\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      try {\n        yield createNewUserWithEmailAndPassword(email, password);\n      } catch (error) {\n        console.error(\"Fehler bei der Anmeldung mit E-Mail und Passwort:\", error);\n        setErr(error.message);\n      }\n    });\n    return function handleEmailSignUp() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Sign Up for TSM2.0\"\n    }), err ? _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: err\n    }) : null, _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: {\n        borderWidth: 1,\n        width: 200,\n        marginBottom: 10\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up with Email\",\n      onPress: handleEmailSignUp\n    }), _jsx(Button, {\n      title: \"Sign Up with Google\",\n      onPress: SignInWithGooglePopup\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontSize: 24\n  }\n});","map":{"version":3,"names":["React","View","Text","Button","TextInput","StyleSheet","auth","createNewUserWithEmailAndPassword","SignInWithGooglePopup","jsx","_jsx","jsxs","_jsxs","SignUp","_React$useState","useState","_React$useState2","_slicedToArray","email","setEmail","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","err","setErr","emailRegex","handleEmailSignUp","_ref","_asyncToGenerator","test","console","log","error","message","apply","arguments","style","styles","container","children","heading","color","placeholder","value","onChangeText","borderWidth","width","marginBottom","secureTextEntry","title","onPress","create","flex","backgroundColor","alignItems","justifyContent","fontSize"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/comp/SignUp.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Button, TextInput, StyleSheet } from 'react-native';\nimport { auth } from \"../comp/firbase/firebase.settings\";\nimport { createNewUserWithEmailAndPassword } from '../comp/firbase/auth/auth.emailAndPassword';\nimport { SignInWithGooglePopup } from '../comp/firbase/auth/auth.googlePopup';\n\nexport function SignUp() {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [err, setErr] = React.useState('');\n\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\nconst handleEmailSignUp = async () => {\n    // Validierung der E-Mail-Adresse mit Regex\n    if (!emailRegex.test(email)) {\n      setErr(\"Die E-Mail muss einem gültigen E-Mail-Format entsprechen.\");\n      return;\n    }\n\n    // Überprüfung, ob das Passwort-Feld leer ist\n    if (!password) {\n      setErr(\"Das Passwortfeld darf nicht leer sein.\");\n      return;\n    }\n\n    // Logging der E-Mail und des Passworts (nur für Debugging-Zwecke)\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n\n    // Versuch, einen neuen Benutzer mit E-Mail und Passwort zu erstellen\n    try {\n      await createNewUserWithEmailAndPassword(email, password);\n      // Navigiere den Benutzer nach der Anmeldung zum Hauptbildschirm deiner App\n      // (du müsstest die Navigation noch implementieren)\n\n    } catch (error) {\n      // Fehlerbehandlung: Ausgabe des Fehlers in der Konsole und Darstellung auf der Benutzeroberfläche\n      console.error(\"Fehler bei der Anmeldung mit E-Mail und Passwort:\", error);\n      setErr(error.message); // Zeigt die Fehlermeldung in der Benutzeroberfläche an\n    }\n};\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Sign Up for TSM2.0</Text>\n      {err ? <Text style={{color: 'red'}}>{err}</Text> : null}\n      <TextInput\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={{ borderWidth: 1, width: 200, marginBottom: 10 }}\n      />\n      <Button title=\"Sign Up with Email\" onPress={handleEmailSignUp} />\n      <Button title=\"Sign Up with Google\" onPress={SignInWithGooglePopup} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  heading: {\n    fontSize: 24,\n  },\n});\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
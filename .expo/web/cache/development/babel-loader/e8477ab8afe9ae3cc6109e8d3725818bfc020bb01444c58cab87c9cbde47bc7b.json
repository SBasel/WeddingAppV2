{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ImageEditor(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var imageUri = route.params.imageUri;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditing = _useState2[0],\n    setIsEditing = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState(20),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fontSize = _useState6[0],\n    setFontSize = _useState6[1];\n  var _useState7 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    textPosition = _useState8[0],\n    setTextPosition = _useState8[1];\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(event, gestureState) {\n      setTextPosition({\n        x: textPosition.x + gestureState.dx,\n        y: textPosition.y + gestureState.dy\n      });\n    },\n    onPanResponderRelease: function onPanResponderRelease() {}\n  })).current;\n  var onClose = function onClose() {\n    navigation.goBack();\n  };\n  var onSave = function onSave() {\n    setIsEditing(false);\n  };\n  return _jsxs(View, {\n    style: styles.editorContainer,\n    children: [_jsx(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: {\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height - 100\n      }\n    }), isEditing && _jsx(TextInput, {\n      style: _objectSpread(_objectSpread({}, styles.textInput), {}, {\n        fontSize: fontSize,\n        top: textPosition.y,\n        left: textPosition.x\n      }),\n      value: text,\n      onChangeText: setText,\n      placeholder: \"F\\xFCge Text hinzu\"\n    }), !isEditing && _jsx(Text, _objectSpread(_objectSpread({\n      style: _objectSpread(_objectSpread({}, styles.overlayText), {}, {\n        fontSize: fontSize,\n        top: textPosition.y,\n        left: textPosition.x\n      })\n    }, panResponder.panHandlers), {}, {\n      children: text\n    })), _jsx(View, {\n      style: styles.buttonContainer,\n      children: isEditing ? _jsx(TouchableOpacity, {\n        onPress: onSave,\n        children: _jsx(FontAwesome5, {\n          name: \"check\",\n          size: 24,\n          color: \"green\"\n        })\n      }) : _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsEditing(true);\n        },\n        children: _jsx(FontAwesome5, {\n          name: \"pen\",\n          size: 24,\n          color: \"blue\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.closeButton,\n      onPress: onClose,\n      children: _jsx(FontAwesome5, {\n        name: \"times\",\n        size: 24,\n        color: \"black\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  editorContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInput: {\n    position: 'absolute',\n    color: 'black',\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 4,\n    zIndex: 5\n  },\n  overlayText: {\n    position: 'absolute',\n    color: 'black',\n    zIndex: 5\n  },\n  buttonContainer: {\n    position: 'absolute',\n    right: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 10\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 20,\n    right: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","Image","TextInput","StyleSheet","TouchableOpacity","Text","Dimensions","PanResponder","FontAwesome5","jsx","_jsx","jsxs","_jsxs","ImageEditor","_ref","route","navigation","imageUri","params","_useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","text","setText","_useState5","_useState6","fontSize","setFontSize","_useState7","x","y","_useState8","textPosition","setTextPosition","panResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gestureState","dx","dy","onPanResponderRelease","current","onClose","goBack","onSave","style","styles","editorContainer","children","source","uri","width","get","height","_objectSpread","textInput","top","left","value","onChangeText","placeholder","overlayText","panHandlers","buttonContainer","onPress","name","size","color","closeButton","flex","alignItems","justifyContent","position","borderColor","borderWidth","borderRadius","zIndex","right","flexDirection"],"sources":["/home/dci-student/DCIFolder/WAppV2/WeddingApp2.0/comp/Camera/ImageEditor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Image, TextInput, StyleSheet, TouchableOpacity, Text, Dimensions, PanResponder } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport function ImageEditor({ route, navigation }) {\n    const { imageUri } = route.params;\n    const [isEditing, setIsEditing] = useState(false);\n    const [text, setText] = useState('');\n    const [fontSize, setFontSize] = useState(20);\n    const [textPosition, setTextPosition] = useState({ x: 0, y: 0 });\n\n    const panResponder = useRef(\n        PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderMove: (event, gestureState) => {\n                setTextPosition({\n                    x: textPosition.x + gestureState.dx,\n                    y: textPosition.y + gestureState.dy\n                });\n            },\n            onPanResponderRelease: () => {\n                // Optional: Hier können Sie zusätzlichen Code hinzufügen, um die Endposition zu speichern.\n            }\n        })\n    ).current;\n\n    const onClose = () => {\n        navigation.goBack();\n    }\n\n    const onSave = () => {\n        setIsEditing(false);\n    }\n\n    return (\n        <View style={styles.editorContainer}>\n            <Image source={{ uri: imageUri }} style={{ width: Dimensions.get('window').width, height: Dimensions.get('window').height - 100 }} />\n            \n            {isEditing && (\n                <TextInput\n                    style={{...styles.textInput, fontSize: fontSize, top: textPosition.y, left: textPosition.x}}\n                    value={text}\n                    onChangeText={setText}\n                    placeholder=\"Füge Text hinzu\"\n                />\n            )}\n            \n            {!isEditing && (\n                <Text\n                    style={{...styles.overlayText, fontSize: fontSize, top: textPosition.y, left: textPosition.x}}\n                    {...panResponder.panHandlers}\n                >\n                    {text}\n                </Text>\n            )}\n            \n            <View style={styles.buttonContainer}>\n                {isEditing ? (\n                    <TouchableOpacity onPress={onSave}>\n                        <FontAwesome5 name=\"check\" size={24} color=\"green\" />\n                    </TouchableOpacity>\n                ) : (\n                    <TouchableOpacity onPress={() => setIsEditing(true)}>\n                        <FontAwesome5 name=\"pen\" size={24} color=\"blue\" />\n                    </TouchableOpacity>\n                )}\n            </View>\n\n            <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n                <FontAwesome5 name=\"times\" size={24} color=\"black\" />\n            </TouchableOpacity>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    editorContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    textInput: {\n        position: 'absolute',\n        color: 'black',\n        borderColor: 'black',\n        borderWidth: 1,\n        borderRadius: 4,\n        zIndex: 5, \n    },\n    overlayText: {\n        position: 'absolute',\n        color: 'black',\n        zIndex: 5, \n    },\n    buttonContainer: {\n        position: 'absolute',\n        right: 10,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 10,\n    },\n    closeButton: {\n        position: 'absolute',\n        top: 20, \n        right: 20,\n    },\n});\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export var Tool = function (Tool) {\n  Tool[\"COMPOSITION\"] = \"composition\";\n  Tool[\"TRIM\"] = \"trim\";\n  Tool[\"AUDIO\"] = \"audio\";\n  Tool[\"TRANSFORM\"] = \"transform\";\n  Tool[\"FILTER\"] = \"filter\";\n  Tool[\"ADJUSTMENT\"] = \"adjustment\";\n  Tool[\"FOCUS\"] = \"focus\";\n  Tool[\"STICKER\"] = \"sticker\";\n  Tool[\"TEXT\"] = \"text\";\n  Tool[\"TEXT_DESIGN\"] = \"textdesign\";\n  Tool[\"OVERLAY\"] = \"overlay\";\n  Tool[\"FRAME\"] = \"frame\";\n  Tool[\"BRUSH\"] = \"brush\";\n  return Tool;\n}({});\nexport var ImageFormat = function (ImageFormat) {\n  ImageFormat[\"JPEG\"] = \"image/jpeg\";\n  ImageFormat[\"PNG\"] = \"image/png\";\n  ImageFormat[\"HEIF\"] = \"image/heif\";\n  ImageFormat[\"TIFF\"] = \"image/tiff\";\n  return ImageFormat;\n}({});\nexport var VideoFormat = function (VideoFormat) {\n  VideoFormat[\"MP4\"] = \"video/mp4\";\n  VideoFormat[\"MOV\"] = \"video/quicktime\";\n  return VideoFormat;\n}({});\nexport var VideoCodec = function (VideoCodec) {\n  VideoCodec[\"H264\"] = \"h264\";\n  VideoCodec[\"HEVC\"] = \"hevc\";\n  return VideoCodec;\n}({});\nexport var ImageExportType = function (ImageExportType) {\n  ImageExportType[\"FILE_URL\"] = \"file-url\";\n  ImageExportType[\"DATA_URL\"] = \"data-url\";\n  return ImageExportType;\n}({});\nexport var SerializationExportType = function (SerializationExportType) {\n  SerializationExportType[\"FILE_URL\"] = \"file-url\";\n  SerializationExportType[\"OBJECT\"] = \"object\";\n  return SerializationExportType;\n}({});\nexport var AdjustmentTool = function (AdjustmentTool) {\n  AdjustmentTool[\"BRIGHTNESS\"] = \"brightness\";\n  AdjustmentTool[\"CONTRAST\"] = \"contrast\";\n  AdjustmentTool[\"SATURATION\"] = \"saturation\";\n  AdjustmentTool[\"CLARITY\"] = \"clarity\";\n  AdjustmentTool[\"SHADOWS\"] = \"shadows\";\n  AdjustmentTool[\"HIGHLIGHTS\"] = \"highlights\";\n  AdjustmentTool[\"EXPOSURE\"] = \"exposure\";\n  AdjustmentTool[\"GAMMA\"] = \"gamma\";\n  AdjustmentTool[\"BLACKS\"] = \"blacks\";\n  AdjustmentTool[\"WHITES\"] = \"whites\";\n  AdjustmentTool[\"TEMPERATURE\"] = \"temperature\";\n  AdjustmentTool[\"SHARPNESS\"] = \"sharpness\";\n  return AdjustmentTool;\n}({});\nexport var FocusTool = function (FocusTool) {\n  FocusTool[\"NONE\"] = \"none\";\n  FocusTool[\"RADIAL\"] = \"radial\";\n  FocusTool[\"MIRRORED\"] = \"mirrored\";\n  FocusTool[\"LINEAR\"] = \"linear\";\n  FocusTool[\"GAUSSIAN\"] = \"gaussian\";\n  return FocusTool;\n}({});\nexport var ForceTrimMode = function (ForceTrimMode) {\n  ForceTrimMode[\"ALWAYS\"] = \"always\";\n  ForceTrimMode[\"IF_NEEDED\"] = \"ifneeded\";\n  ForceTrimMode[\"SILENT\"] = \"silent\";\n  return ForceTrimMode;\n}({});\nexport var TintMode = function (TintMode) {\n  TintMode[\"NONE\"] = \"none\";\n  TintMode[\"SOLID\"] = \"solid\";\n  TintMode[\"COLORIZED\"] = \"colorized\";\n  return TintMode;\n}({});\nexport var BlendMode = function (BlendMode) {\n  BlendMode[\"NORMAL\"] = \"normal\";\n  BlendMode[\"OVERLAY\"] = \"overlay\";\n  BlendMode[\"SOFT_LIGHT\"] = \"softlight\";\n  BlendMode[\"HARD_LIGHT\"] = \"hardlight\";\n  BlendMode[\"MULTIPLY\"] = \"multiply\";\n  BlendMode[\"DARKEN\"] = \"darken\";\n  BlendMode[\"COLOR_BURN\"] = \"colorburn\";\n  BlendMode[\"SCREEN\"] = \"screen\";\n  BlendMode[\"LIGHTEN\"] = \"lighten\";\n  return BlendMode;\n}({});\nexport var FrameLayoutMode = function (FrameLayoutMode) {\n  FrameLayoutMode[\"HORIZONTAL_INSIDE\"] = \"horizontal-inside\";\n  FrameLayoutMode[\"VERTICAL_INSIDE\"] = \"vertical-inside\";\n  return FrameLayoutMode;\n}({});\nexport var FrameTileMode = function (FrameTileMode) {\n  FrameTileMode[\"REPEAT\"] = \"repeat\";\n  FrameTileMode[\"STRETCH\"] = \"stretch\";\n  return FrameTileMode;\n}({});\nexport var AlignmentMode = function (AlignmentMode) {\n  AlignmentMode[\"CENTER\"] = \"center\";\n  AlignmentMode[\"TOP_LEFT\"] = \"top-left\";\n  AlignmentMode[\"TOP_RIGHT\"] = \"top-right\";\n  AlignmentMode[\"BOTTOM_LEFT\"] = \"bottom-left\";\n  AlignmentMode[\"BOTTOM_RIGHT\"] = \"bottom-right\";\n  return AlignmentMode;\n}({});\nexport var CanvasAction = function (CanvasAction) {\n  CanvasAction[\"UNDO\"] = \"undo\";\n  CanvasAction[\"REDO\"] = \"redo\";\n  CanvasAction[\"DELETE\"] = \"delete\";\n  CanvasAction[\"BRING_TO_FRONT\"] = \"bringtofront\";\n  CanvasAction[\"ADD\"] = \"add\";\n  CanvasAction[\"FLIP\"] = \"flip\";\n  CanvasAction[\"INVERT\"] = \"invert\";\n  CanvasAction[\"SOUND_ON_OFF\"] = \"soundonoff\";\n  CanvasAction[\"PLAY_PAUSE\"] = \"playpause\";\n  CanvasAction[\"REMOVE_BACKGROUND\"] = \"removebackground\";\n  return CanvasAction;\n}({});\nexport var StickerAction = function (StickerAction) {\n  StickerAction[\"COLOR\"] = \"color\";\n  StickerAction[\"STRAIGHTEN\"] = \"straighten\";\n  StickerAction[\"BRIGHTNESS\"] = \"brightness\";\n  StickerAction[\"CONTRAST\"] = \"contrast\";\n  StickerAction[\"SATURATION\"] = \"saturation\";\n  StickerAction[\"REPLACE\"] = \"replace\";\n  StickerAction[\"OPACITY\"] = \"opacity\";\n  StickerAction[\"REMOVE_BACKGROUND\"] = \"removebackground\";\n  StickerAction[\"DURATION\"] = \"duration\";\n  return StickerAction;\n}({});\nexport var TextAction = function (TextAction) {\n  TextAction[\"FONT\"] = \"font\";\n  TextAction[\"COLOR\"] = \"color\";\n  TextAction[\"BACKGROUND_COLOR\"] = \"backgroundcolor\";\n  TextAction[\"ALIGNMENT\"] = \"alignment\";\n  TextAction[\"DURATION\"] = \"duration\";\n  return TextAction;\n}({});\nexport var FrameAction = function (FrameAction) {\n  FrameAction[\"REPLACE\"] = \"replace\";\n  FrameAction[\"WIDTH\"] = \"width\";\n  FrameAction[\"OPACITY\"] = \"opacity\";\n  return FrameAction;\n}({});\nexport var BrushAction = function (BrushAction) {\n  BrushAction[\"COLOR\"] = \"color\";\n  BrushAction[\"SIZE\"] = \"size\";\n  BrushAction[\"HARDNESS\"] = \"hardness\";\n  return BrushAction;\n}({});\nexport var ExistingTheme = function (ExistingTheme) {\n  ExistingTheme[\"DARK\"] = \"dark\";\n  ExistingTheme[\"LIGHT\"] = \"light\";\n  ExistingTheme[\"DYNAMIC\"] = \"dynamic\";\n  return ExistingTheme;\n}({});","map":{"version":3,"names":["Tool","ImageFormat","VideoFormat","VideoCodec","ImageExportType","SerializationExportType","AdjustmentTool","FocusTool","ForceTrimMode","TintMode","BlendMode","FrameLayoutMode","FrameTileMode","AlignmentMode","CanvasAction","StickerAction","TextAction","FrameAction","BrushAction","ExistingTheme"],"sources":["/home/dci-student/DCIFolder/WAppV2/WeddingApp2.0/node_modules/react-native-photoeditorsdk/configuration.ts"],"sourcesContent":["/**\n * An asset URI which will always be passed as a `string` to the native platform SDKs.\n * In React Native an `AssetURI` can be assigned with an asset reference which can be\n * obtained by, e.g., `require('./pathToStaticAssetResource.withExtension')` as `number`.\n * Every `AssetURI` as `number` contained in the `Configuration` will be resolved to a URI\n * as `string` when passed to the SDK.\n */\nexport type AssetURI = string | number\n\n/**\n * Configuration options and asset definitions for image and video editing tasks.\n */\nexport interface Configuration {\n  /**\n   * When set to `true`, the user is forced to crop the asset to one of the allowed crop ratios in\n   * `transform.items` before being able to use other features of the editor.\n   * The transform tool will only be presented if the image does not already fit one of the allowed\n   * aspect ratios. It will be presented automatically, if the user changes the orientation of the asset\n   * and the result does not match an allowed aspect ratio.\n   *\n   * This property has no effect unless `transform.allowFreeCrop` is set to `false` or `null`.\n   * @example // Defaults to:\n   * false\n   */\n  forceCrop?: boolean;\n\n  /**\n   * Controls if the editor is used in single tool mode.\n   * Prerequisite is that only one tool is in `tools`.\n   * \n   * @example // Defaults to:\n   * true\n   */\n  singleToolMode?: boolean;\n\n  /**\n   * Defines all allowed actions for the main screen that are displayed as overlay buttons on the canvas.\n   * Only buttons for allowed actions are visible.\n   * @note The `CanvasAction.REMOVE_BACKGROUND` action is only shown when editing photos where a person could be detected. This feature is only supported on devices running iOS 15+.\n   * @note The `CanvasAction.SOUND_ON_OFF` and `CanvasAction.PLAY_PAUSE` action is only shown when editing videos.\n   * @example // Defaults to:\n   * [CanvasAction.SOUND_ON_OFF, CanvasAction.PLAY_PAUSE, CanvasAction.UNDO, CanvasAction.REDO]\n   */\n  mainCanvasActions?: Array<\n    CanvasAction.REMOVE_BACKGROUND |\n    CanvasAction.SOUND_ON_OFF |\n    CanvasAction.PLAY_PAUSE |\n    CanvasAction.UNDO |\n    CanvasAction.REDO\n  >;\n\n  /**\n   * Controls if the user can zoom the preview image.\n   * @example // Defaults to:\n   * true\n   */\n  enableZoom?: boolean;\n\n  /**\n   * Global snapping options for all sprites, e.g., stickers, texts, and text designs.\n   */\n  snapping?: {\n    /**\n     * Snapping options for positioning sprites.\n     */\n    position?: {\n      /**\n       * Whether sprites should snap to specific positions during pan interactions.\n       * This switch enables or disables position snapping.\n       * @example // Defaults to:\n       * true\n       */\n      enabled?: boolean;\n      /**\n       * This threshold defines the distance of a pan gesture where snapping at a snap point occurs.\n       * It is measured in points.\n       * @example // Defaults to:\n       * 20\n       */\n      threshold?: number;\n      /**\n       * If enabled a sprite's center snaps to the horizontal line through the center of the edited image.\n       * @example // Defaults to:\n       * true\n       */\n      snapToHorizontalCenter?: boolean;\n      /**\n       * If enabled a sprite's center snaps to the vertical line through the center of the edited image.\n       * @example // Defaults to:\n       * true\n       */\n      snapToVerticalCenter?: boolean;\n      /**\n       * The left side of a sprite's bounding box snaps to a vertical line which is shifted\n       * from the left side of the edited image towards its center by this value. The value is measured in normalized\n       * coordinates relative to the smaller side of the edited image.\n       * If this value is explicitly set to `null` this snapping line is disabled.\n       * @example // Defaults to:\n       * 0.1\n       */\n      snapToLeft?: number | null;\n      /**\n       * The right side of a sprite's bounding box snaps to a vertical line which is shifted\n       * from the right side of the edited image towards its center by this value. The value is measured in normalized\n       * coordinates relative to the smaller side of the edited image.\n       * If this value is explicitly set to `null` this snapping line is disabled.\n       * @example // Defaults to:\n       * 0.1\n       */\n      snapToRight?: number | null;\n      /**\n       * The top side of a sprite's bounding box snaps to a horizontal line which is shifted\n       * from the top side of the edited image towards its center by this value. The value is measured in normalized\n       * coordinates relative to the smaller side of the edited image.\n       * If this value is explicitly set to `null` this snapping line is disabled.\n       * @example // Defaults to:\n       * 0.1\n       */\n      snapToTop?: number | null;\n      /**\n       * The bottom side of a sprite's bounding box snaps to a horizontal line which is shifted\n       * from the bottom side of the edited image towards its center by this value. The value is measured in normalized\n       * coordinates relative to the smaller side of the edited image.\n       * If this value is explicitly set to `null` this snapping line is disabled.\n       * @example // Defaults to:\n       * 0.1\n       */\n      snapToBottom?: number | null;\n    }\n    /**\n     * Snapping options for rotating sprites.\n     */\n    rotation?: {\n      /**\n       * Whether sprites should snap to specific orientations during rotation interactions.\n       * This switch enables or disables rotation snapping.\n       * @example // Defaults to:\n       * true\n       */\n      enabled?: boolean;\n      /**\n       * This threshold defines the arc length of a rotation gesture where snapping at a snap angle occurs.\n       * It is measured in points.\n       * @example // Defaults to:\n       * 20\n       */\n      threshold?: number;\n      /**\n       * Enabled snapping angles in degrees for rotating a sprite. The rotation angle is defined clockwise.\n       * @example // Defaults to:\n       * [0, 45, 90, 135, 180, 225, 270, 315]\n       */\n      snapToAngles?: number[];\n    }\n  }\n\n  /**\n   * Global watermark options.\n   */\n  watermark?: {\n    /**\n     * Input image for the watermark. No additional processing is performed on the image.\n     * Transparency must be supported by the file itself.\n     * If `null` no watermark will be applied.     \n     * @note If the watermark is the only editing operation to be performed, `export.force` option\n     * must be enabled for the change to be applied. \n     * @example // Defaults to:\n     * null     \n     */\n    watermarkURI?: AssetURI;\n    /**\n     * The relative size of the watermark.\n     * This value is measured in relation to the smaller side of the transformed image/video that the user is editing\n     * and the longer side of the watermark image.\n     * @note Values outside (0.0, 1.0) will be clamped.\n     * @example // Defaults to:\n     * 0.2\n     */\n    size?: number;\n    /**\n     * The relative spacing between the edges of the image/video and the watermark.\n     * This value is measured in relation to the smaller side of the transformed image/video that the user is editing. \n     * @note Values outside (0.0, 0.5) will be clamped.\n     * @example // Defaults to:\n     * 0.05.\n     */\n    inset?: number;\n    /**\n     * It defines the layout of the watermark inside the canvas. \n     * @example // Defaults to:\n     * AlignmentMode.TOP_RIGHT\n     */\n    alignment?: AlignmentMode\n  }\n\n  /**\n   * The menu items (or tools) to display in the main menu.\n   * @example // Defaults to:\n   * [Tool.COMPOSITION, Tool.TRANSFORM, Tool.FILTER, Tool.ADJUSTMENT, Tool.FOCUS, Tool.STICKER, Tool.TEXT, Tool.TEXT_DESIGN, Tool.OVERLAY, Tool.FRAME, Tool.BRUSH]\n   * // or if your license does not include `Tool.COMPOSITION`:\n   * [Tool.TRIM, Tool.TRANSFORM, Tool.FILTER, Tool.ADJUSTMENT, Tool.FOCUS, Tool.STICKER, Tool.TEXT, Tool.TEXT_DESIGN, Tool.OVERLAY, Tool.FRAME, Tool.BRUSH]\n   */\n  tools?: Tool[];\n\n  /**\n   * Configuration options for `Tool.COMPOSITION`.\n   */\n  composition?: {\n    /**\n     * Defines all available video clips in the video clip library. Each video clip must be assigned to a category.\n     * @note If this array is `null` the defaults are used. If this array is empty the video clip library won't be shown when the user\n     * taps the add button in the composition menu instead the device's media library will be shown directly when `personalVideoClips` is enabled.\n     * If `personalVideoClips` is disabled in this case the add button in the composition menu won't be shown at all.\n     * @example // Defaults to:\n     * []\n     */\n    categories?: (VideoClipCategory)[];\n    /**\n     * Defines all allowed actions for the composition tool that are displayed as overlay buttons on the canvas.\n     * Only buttons for allowed actions are visible.\n     * @example // Defaults to:\n     * [CanvasAction.PLAY_PAUSE]\n     */\n    canvasActions?: Array<\n      CanvasAction.PLAY_PAUSE\n    >;\n    /**\n     * If enabled the user can add personal video clips from the device's media library. A button is added as last item in the composition\n     * menu or as first item in the video clip library menu in front of the video clip categories if any `categories` are defined.\n     * @example // Defaults to:\n     * true\n     */\n    personalVideoClips?: boolean;\n    /**\n     * Configuration options for trimming individual video clips of the video composition.\n     */\n    clipTrim?: {\n      /**\n       * Defines all allowed actions for the clip trim tool that are displayed as overlay buttons on the canvas.\n       * Only buttons for allowed actions are visible.\n       * @example // Defaults to:\n       * [CanvasAction.DELETE, CanvasAction.PLAY_PAUSE]\n       */\n      canvasActions?: Array<\n        CanvasAction.DELETE |\n        CanvasAction.PLAY_PAUSE\n      >;\n    }\n  }\n\n  /**\n   * Configuration options for `Tool.TRIM`.\n   */\n  trim?: {\n    /**\n     * Defines all allowed actions for the trim tool that are displayed as overlay buttons on the canvas.\n     * Only buttons for allowed actions are visible.\n     * @example // Defaults to:\n     * [CanvasAction.DELETE, CanvasAction.PLAY_PAUSE]\n     */\n    canvasActions?: Array<\n      CanvasAction.PLAY_PAUSE\n    >;\n    /**\n     * Enforces a minimum allowed duration in seconds for the edited video for the trim and composition tool.\n     * The minimum allowed value is 0.5 seconds. See `forceMode` for additional options.\n     * @example // Defaults to:\n     * 0.5\n     */\n    minimumDuration?: number;\n    /**\n     * Enforces a maximum allowed duration in seconds for the edited video for the trim and composition tool\n     * if set to a value different from `null`. See `forceMode` for additional options.\n     * @example // Defaults to:\n     * null\n     */\n    maximumDuration?: number;\n    /**\n     * With the force trim option, you're able to enforce a `minimumDuration` and `maximumDuration` for a video composition\n     * in the composition tool and/or a single video in the trim tool. Thus users will not be able to export videos,\n     * which are not within the defined video duration limits. This feature is implemented as part of the user interface only.\n     * To be able to use this feature your subscription must include the trim feature.\n     * @example // Defaults to:\n     * ForceTrimMode.SILENT\n     */\n    forceMode?: ForceTrimMode;\n  }\n\n  /**\n   * Configuration options for `Tool.AUDIO`.\n   */\n  audio?: {\n    /**\n     * Defines all available audio clips in the audio clip library. Each audio clip must be assigned to a category.\n     * @example // Defaults to:\n     * []\n     */\n    categories?: (AudioClipCategory)[];\n    /**\n     * Defines all allowed actions for the audio tool that are displayed as overlay buttons on the canvas.\n     * Only buttons for allowed actions are visible.\n     * @example // Defaults to:\n     * [CanvasAction.DELETE]\n     */\n    canvasActions?: Array<\n      CanvasAction.DELETE |\n      CanvasAction.PLAY_PAUSE\n    >;\n  }\n\n  /**\n   * Configuration options for `Tool.TRANSFORM`.\n   */\n  transform?: {\n    /**\n     * Whether to show a reset button to reset the applied crop, rotation and tilt angle.\n     * @example // Defaults to:\n     * true\n     */\n    showResetButton?: boolean;\n    /**\n     * Whether to allow free cropping. If this is enabled, free cropping is always the first available option.\n     * @example // Defaults to:\n     * true\n     */\n    allowFreeCrop?: boolean;\n    /**\n     * Defines all allowed crop aspect ratios. The crop ratio buttons are shown in the given order.\n     * @example // Defaults to:\n     * [\n     *   { width: 1, height: 1, name: \"Square\" },\n     *   { width: 16, height: 9, toggleable: true },\n     *   { width: 4, height: 3, toggleable: true },\n     *   { width: 3, height: 2, toggleable: true },\n     * ]\n     */\n    items?: CropRatio[];\n  }\n\n  /**\n   * Configuration options for `Tool.FILTER`.\n   */\n  filter?: {\n    /**\n     * Defines all available filters. Each filter must be assigned to a category.\n     * New items and categories can be mixed and matched with existing ones.\n     * `NONE` is always added.\n     * @example // Defaults to:\n     * [\n     *   { identifier: \"imgly_filter_category_duotone\", items: [\n     *     { identifier: \"imgly_duotone_desert\" },\n     *     { identifier: \"imgly_duotone_peach\" },\n     *     { identifier: \"imgly_duotone_clash\" },\n     *     { identifier: \"imgly_duotone_plum\" },\n     *     { identifier: \"imgly_duotone_breezy\" },\n     *     { identifier: \"imgly_duotone_deepblue\" },\n     *     { identifier: \"imgly_duotone_frog\" },\n     *     { identifier: \"imgly_duotone_sunset\" },\n     *   ]},\n     *   { identifier: \"imgly_filter_category_bw\", items: [\n     *     { identifier: \"imgly_lut_ad1920\" },\n     *     { identifier: \"imgly_lut_bw\" },\n     *     { identifier: \"imgly_lut_x400\" },\n     *     { identifier: \"imgly_lut_litho\" },\n     *     { identifier: \"imgly_lut_sepiahigh\" },\n     *     { identifier: \"imgly_lut_plate\" },\n     *     { identifier: \"imgly_lut_sin\" },\n     *   ]},\n     *   { identifier: \"imgly_filter_category_vintage\", items: [\n     *     { identifier: \"imgly_lut_blues\" },\n     *     { identifier: \"imgly_lut_front\" },\n     *     { identifier: \"imgly_lut_texas\" },\n     *     { identifier: \"imgly_lut_celsius\" },\n     *     { identifier: \"imgly_lut_cool\" },\n     *   ]},\n     *   { identifier: \"imgly_filter_category_smooth\", items: [\n     *     { identifier: \"imgly_lut_chest\" },\n     *     { identifier: \"imgly_lut_winter\" },\n     *     { identifier: \"imgly_lut_kdynamic\" },\n     *     { identifier: \"imgly_lut_fall\" },\n     *     { identifier: \"imgly_lut_lenin\" },\n     *     { identifier: \"imgly_lut_pola669\" },\n     *   ]},\n     *   { identifier: \"imgly_filter_category_cold\", items: [\n     *     { identifier: \"imgly_lut_elder\" },\n     *     { identifier: \"imgly_lut_orchid\" },\n     *     { identifier: \"imgly_lut_bleached\" },\n     *     { identifier: \"imgly_lut_bleachedblue\" },\n     *     { identifier: \"imgly_lut_breeze\" },\n     *     { identifier: \"imgly_lut_blueshadows\" },\n     *   ]},\n     *   { identifier: \"imgly_filter_category_warm\", items: [\n     *     { identifier: \"imgly_lut_sunset\" },\n     *     { identifier: \"imgly_lut_eighties\" },\n     *     { identifier: \"imgly_lut_evening\" },\n     *     { identifier: \"imgly_lut_k2\" },\n     *     { identifier: \"imgly_lut_nogreen\" },\n     *   ]},\n     *   { identifier: \"imgly_filter_category_legacy\", items: [\n     *     { identifier: \"imgly_lut_ancient\" },\n     *     { identifier: \"imgly_lut_cottoncandy\" },\n     *     { identifier: \"imgly_lut_classic\" },\n     *     { identifier: \"imgly_lut_colorful\" },\n     *     { identifier: \"imgly_lut_creamy\" },\n     *     { identifier: \"imgly_lut_fixie\" },\n     *     { identifier: \"imgly_lut_food\" },\n     *     { identifier: \"imgly_lut_fridge\" },\n     *     { identifier: \"imgly_lut_glam\" },\n     *     { identifier: \"imgly_lut_gobblin\" },\n     *     { identifier: \"imgly_lut_highcontrast\" },\n     *     { identifier: \"imgly_lut_highcarb\" },\n     *     { identifier: \"imgly_lut_k1\" },\n     *     { identifier: \"imgly_lut_k6\" },\n     *     { identifier: \"imgly_lut_keen\" },\n     *     { identifier: \"imgly_lut_lomo\" },\n     *     { identifier: \"imgly_lut_lomo100\" },\n     *     { identifier: \"imgly_lut_lucid\" },\n     *     { identifier: \"imgly_lut_mellow\" },\n     *     { identifier: \"imgly_lut_neat\" },\n     *     { identifier: \"imgly_lut_pale\" },\n     *     { identifier: \"imgly_lut_pitched\" },\n     *     { identifier: \"imgly_lut_polasx\" },\n     *     { identifier: \"imgly_lut_pro400\" },\n     *     { identifier: \"imgly_lut_quozi\" },\n     *     { identifier: \"imgly_lut_settled\" },\n     *     { identifier: \"imgly_lut_seventies\" },\n     *     { identifier: \"imgly_lut_soft\" },\n     *     { identifier: \"imgly_lut_steel\" },\n     *     { identifier: \"imgly_lut_summer\" },\n     *     { identifier: \"imgly_lut_tender\" },\n     *     { identifier: \"imgly_lut_twilight\" },\n     *   ]},\n     * ]\n     */\n    categories?: (FilterCategory | ExistingFilterCategory)[];\n    /**\n     * Whether categories should be flattened which effectively hides the categories.\n     * If this is enabled all filters will be shown in the top-level of the filter selection tool\n     * orderer according to their parent category.\n     * @example // Defaults to:\n     * false\n     */\n    flattenCategories?: boolean;\n  }\n\n  /**\n   * Configuration options for `Tool.ADJUSTMENT`.\n   */\n  adjustment?: {\n    /**\n     * Whether to show a reset button to reset the applied adjustments.\n     * @example // Defaults to:\n     * true\n     */\n    showResetButton?: boolean;\n    /**\n     * Defines all allowed adjustment tools. The adjustment tool buttons are always shown in the given order.\n     * @example // Defaults to:\n     * [AdjustmentTool.BRIGHTNESS, AdjustmentTool.CONTRAST, AdjustmentTool.SATURATION, AdjustmentTool.CLARITY, AdjustmentTool.SHADOWS, AdjustmentTool.HIGHLIGHTS, AdjustmentTool.EXPOSURE, AdjustmentTool.GAMMA, AdjustmentTool.BLACKS, AdjustmentTool.WHITES, AdjustmentTool.TEMPERATURE, AdjustmentTool.SHARPNESS]\n     */\n    items?: AdjustmentTool[];\n  }\n\n  /**\n   * Configuration options for `Tool.FOCUS`.\n   */\n  focus?: {\n    /**\n     * Defines all allowed focus tools. The focus tool buttons are shown in the given order.\n     * `NONE` is always added.\n     * @example // Defaults to:\n     * [FocusTool.NONE, FocusTool.RADIAL, FocusTool.MIRRORED, FocusTool.LINEAR, FocusTool.GAUSSIAN]\n     */\n    items?: FocusTool[];\n  }\n\n  /**\n   * Configuration options for `Tool.STICKER`.\n   */\n  sticker?: {\n    /**\n     * Defines all available stickers. Each sticker must be assigned to a category.\n     * New items and categories can be mixed and matched with existing ones.\n     * @note If this array is `null` the defaults are used but the sticker category\n     * with the identifier `imgly_sticker_category_animated` is only shown when editing videos.\n     * @example // Defaults to:\n     * [\n     *   { identifier: \"imgly_sticker_category_emoticons\", items: [\n     *     { identifier: \"imgly_smart_sticker_weekday\" },\n     *     { identifier: \"imgly_smart_sticker_date\" },\n     *     { identifier: \"imgly_smart_sticker_time\" },\n     *     { identifier: \"imgly_smart_sticker_time_clock\" },\n     *     { identifier: \"imgly_sticker_emoticons_grin\" },\n     *     { identifier: \"imgly_sticker_emoticons_laugh\" },\n     *     { identifier: \"imgly_sticker_emoticons_smile\" },\n     *     { identifier: \"imgly_sticker_emoticons_wink\" },\n     *     { identifier: \"imgly_sticker_emoticons_tongue_out_wink\" },\n     *     { identifier: \"imgly_sticker_emoticons_angel\" },\n     *     { identifier: \"imgly_sticker_emoticons_kisses\" },\n     *     { identifier: \"imgly_sticker_emoticons_loving\" },\n     *     { identifier: \"imgly_sticker_emoticons_kiss\" },\n     *     { identifier: \"imgly_sticker_emoticons_wave\" },\n     *     { identifier: \"imgly_sticker_emoticons_nerd\" },\n     *     { identifier: \"imgly_sticker_emoticons_cool\" },\n     *     { identifier: \"imgly_sticker_emoticons_blush\" },\n     *     { identifier: \"imgly_sticker_emoticons_duckface\" },\n     *     { identifier: \"imgly_sticker_emoticons_furious\" },\n     *     { identifier: \"imgly_sticker_emoticons_angry\" },\n     *     { identifier: \"imgly_sticker_emoticons_steaming_furious\" },\n     *     { identifier: \"imgly_sticker_emoticons_sad\" },\n     *     { identifier: \"imgly_sticker_emoticons_anxious\" },\n     *     { identifier: \"imgly_sticker_emoticons_cry\" },\n     *     { identifier: \"imgly_sticker_emoticons_sobbing\" },\n     *     { identifier: \"imgly_sticker_emoticons_loud_cry\" },\n     *     { identifier: \"imgly_sticker_emoticons_wide_grin\" },\n     *     { identifier: \"imgly_sticker_emoticons_impatient\" },\n     *     { identifier: \"imgly_sticker_emoticons_tired\" },\n     *     { identifier: \"imgly_sticker_emoticons_asleep\" },\n     *     { identifier: \"imgly_sticker_emoticons_sleepy\" },\n     *     { identifier: \"imgly_sticker_emoticons_deceased\" },\n     *     { identifier: \"imgly_sticker_emoticons_attention\" },\n     *     { identifier: \"imgly_sticker_emoticons_question\" },\n     *     { identifier: \"imgly_sticker_emoticons_not_speaking_to_you\" },\n     *     { identifier: \"imgly_sticker_emoticons_sick\" },\n     *     { identifier: \"imgly_sticker_emoticons_pumpkin\" },\n     *     { identifier: \"imgly_sticker_emoticons_boxer\" },\n     *     { identifier: \"imgly_sticker_emoticons_idea\" },\n     *     { identifier: \"imgly_sticker_emoticons_smoking\" },\n     *     { identifier: \"imgly_sticker_emoticons_beer\" },\n     *     { identifier: \"imgly_sticker_emoticons_skateboard\" },\n     *     { identifier: \"imgly_sticker_emoticons_guitar\" },\n     *     { identifier: \"imgly_sticker_emoticons_music\" },\n     *     { identifier: \"imgly_sticker_emoticons_sunbathing\" },\n     *     { identifier: \"imgly_sticker_emoticons_hippie\" },\n     *     { identifier: \"imgly_sticker_emoticons_humourous\" },\n     *     { identifier: \"imgly_sticker_emoticons_hitman\" },\n     *     { identifier: \"imgly_sticker_emoticons_harry_potter\" },\n     *     { identifier: \"imgly_sticker_emoticons_business\" },\n     *     { identifier: \"imgly_sticker_emoticons_batman\" },\n     *     { identifier: \"imgly_sticker_emoticons_skull\" },\n     *     { identifier: \"imgly_sticker_emoticons_ninja\" },\n     *     { identifier: \"imgly_sticker_emoticons_masked\" },\n     *     { identifier: \"imgly_sticker_emoticons_alien\" },\n     *     { identifier: \"imgly_sticker_emoticons_wrestler\" },\n     *     { identifier: \"imgly_sticker_emoticons_devil\" },\n     *     { identifier: \"imgly_sticker_emoticons_star\" },\n     *     { identifier: \"imgly_sticker_emoticons_baby_chicken\" },\n     *     { identifier: \"imgly_sticker_emoticons_rabbit\" },\n     *     { identifier: \"imgly_sticker_emoticons_pig\" },\n     *     { identifier: \"imgly_sticker_emoticons_chicken\" },\n     *   ]},\n     *   { identifier: \"imgly_sticker_category_shapes\", items: [\n     *     { identifier: \"imgly_sticker_shapes_badge_01\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_04\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_12\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_06\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_13\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_36\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_08\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_11\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_35\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_28\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_32\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_15\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_20\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_18\" },\n     *     { identifier: \"imgly_sticker_shapes_badge_19\" },\n     *     { identifier: \"imgly_sticker_shapes_arrow_02\" },\n     *     { identifier: \"imgly_sticker_shapes_arrow_03\" },\n     *     { identifier: \"imgly_sticker_shapes_spray_01\" },\n     *     { identifier: \"imgly_sticker_shapes_spray_04\" },\n     *     { identifier: \"imgly_sticker_shapes_spray_03\" },\n     *   ]},\n     *   { identifier: \"imgly_sticker_category_animated\", items: [\n     *     { identifier: \"imgly_sticker_animated_camera\" },\n     *     { identifier: \"imgly_sticker_animated_clouds\" },\n     *     { identifier: \"imgly_sticker_animated_coffee\" },\n     *     { identifier: \"imgly_sticker_animated_fire\" },\n     *     { identifier: \"imgly_sticker_animated_flower\" },\n     *     { identifier: \"imgly_sticker_animated_gift\" },\n     *     { identifier: \"imgly_sticker_animated_heart\" },\n     *     { identifier: \"imgly_sticker_animated_movie_clap\" },\n     *     { identifier: \"imgly_sticker_animated_rainbow\" },\n     *     { identifier: \"imgly_sticker_animated_stars\" },\n     *     { identifier: \"imgly_sticker_animated_sun\" },\n     *     { identifier: \"imgly_sticker_animated_thumbs_up\" },\n     *   ]},\n     * ]\n     */\n    categories?: (StickerCategory | ExistingStickerCategory | ExistingStickerProviderCategory)[];\n    /**\n     * Defines all available colors that can be applied to stickers with a `tintMode` other than `TintMode.NONE`.\n     * The color pipette is always added.\n     * @example // Defaults to:\n     * [\n     *   { color: [0.00, 0.00, 0.00, 0], name: \"Transparent\" },\n     *   { color: [1.00, 1.00, 1.00, 1], name: \"White\" },\n     *   { color: [0.49, 0.49, 0.49, 1], name: \"Gray\" },\n     *   { color: [0.00, 0.00, 0.00, 1], name: \"Black\" },\n     *   { color: [0.40, 0.80, 1.00, 1], name: \"Light blue\" },\n     *   { color: [0.40, 0.53, 1.00, 1], name: \"Blue\" },\n     *   { color: [0.53, 0.40, 1.00, 1], name: \"Purple\" },\n     *   { color: [0.87, 0.40, 1.00, 1], name: \"Orchid\" },\n     *   { color: [1.00, 0.40, 0.80, 1], name: \"Pink\" },\n     *   { color: [0.90, 0.31, 0.31, 1], name: \"Red\" },\n     *   { color: [0.95, 0.53, 0.33, 1], name: \"Orange\" },\n     *   { color: [1.00, 0.80, 0.40, 1], name: \"Gold\" },\n     *   { color: [1.00, 0.97, 0.39, 1], name: \"Yellow\" },\n     *   { color: [0.80, 1.00, 0.40, 1], name: \"Olive\" },\n     *   { color: [0.33, 1.00, 0.53, 1], name: \"Green\" },\n     *   { color: [0.33, 1.00, 0.92, 1], name: \"Aquamarin\" },\n     * ]\n     */\n    colors?: ColorPalette;\n    /**\n     * Defines all allowed actions for the sticker tool menu. Only buttons for allowed actions are visible and shown in the given order.\n     * @note The `StickerAction.REMOVE_BACKGROUND` action is only shown for personal and external (non-animated) stickers where a person could be detected. This feature is only supported on devices running iOS 15+.\n     * @note The `StickerAction.DURATION` action is only shown when editing videos.\n     * @example // Defaults to:\n     * [StickerAction.DURATION, StickerAction.REPLACE, StickerAction.OPACITY, StickerAction.COLOR, StickerAction.REMOVE_BACKGROUND]\n     */\n    actions?: StickerAction[];\n    /**\n     * Defines all allowed actions for the sticker tool that are displayed as overlay buttons on the canvas.\n     * Only buttons for allowed actions are visible.\n     * @example // Defaults to:\n     * [CanvasAction.ADD, CanvasAction.DELETE, CanvasAction.FLIP, CanvasAction.BRING_TO_FRONT, CanvasAction.UNDO, CanvasAction.REDO]\n     */\n    canvasActions?: Array<\n      CanvasAction.UNDO |\n      CanvasAction.REDO |\n      CanvasAction.DELETE |\n      CanvasAction.BRING_TO_FRONT |\n      CanvasAction.ADD |\n      CanvasAction.FLIP\n    >;\n    /**\n     * If enabled the user can create personal stickers from the device's photo library. A button is added as first item\n     * in the menu in front of the sticker categories which modally presents an image selection dialog for personal sticker creation.\n     * Personal stickers will be added to a personal sticker category with the identifier `\"imgly_sticker_category_personal\"` which\n     * will be added between the button and the regular sticker categories if it does not exist.\n     * @example // Defaults to:\n     * false\n     */\n    personalStickers?: boolean;\n    /**\n     * The default tint mode for personal stickers.\n     * @example // Defaults to:\n     * TintMode.NONE\n     */\n    defaultPersonalStickerTintMode?: TintMode;\n  }\n\n  /**\n   * Configuration options for `Tool.TEXT`.\n   */\n  text?: {\n    /**\n     * Defines all available fonts.\n     * New items can be mixed and matched with existing ones.\n     * @example // Defaults to:\n     * [\n     *   { identifier: \"imgly_font_open_sans_bold\" },\n     *   { identifier: \"imgly_font_aleo_bold\" },\n     *   { identifier: \"imgly_font_amaticsc\" },\n     *   { identifier: \"imgly_font_archivo_black\" },\n     *   { identifier: \"imgly_font_bungee_inline\" },\n     *   { identifier: \"imgly_font_campton_bold\" },\n     *   { identifier: \"imgly_font_carter_one\" },\n     *   { identifier: \"imgly_font_codystar\" },\n     *   { identifier: \"imgly_font_fira_sans_regular\" },\n     *   { identifier: \"imgly_font_galano_grotesque_bold\" },\n     *   { identifier: \"imgly_font_krona_one\" },\n     *   { identifier: \"imgly_font_kumar_one_outline\" },\n     *   { identifier: \"imgly_font_lobster\" },\n     *   { identifier: \"imgly_font_molle\" },\n     *   { identifier: \"imgly_font_monoton\" },\n     *   { identifier: \"imgly_font_nixie_one\" },\n     *   { identifier: \"imgly_font_notable\" },\n     *   { identifier: \"imgly_font_ostrich_sans_black\" },\n     *   { identifier: \"imgly_font_ostrich_sans_bold\" },\n     *   { identifier: \"imgly_font_oswald_semi_bold\" },\n     *   { identifier: \"imgly_font_palanquin_dark_semi_bold\" },\n     *   { identifier: \"imgly_font_permanent_marker\" },\n     *   { identifier: \"imgly_font_poppins\" },\n     *   { identifier: \"imgly_font_roboto_black_italic\" },\n     *   { identifier: \"imgly_font_roboto_light_italic\" },\n     *   { identifier: \"imgly_font_sancreek\" },\n     *   { identifier: \"imgly_font_stint_ultra_expanded\" },\n     *   { identifier: \"imgly_font_trash_hand\" },\n     *   { identifier: \"imgly_font_vt323\" },\n     *   { identifier: \"imgly_font_yeseva_one\" },\n     * ]\n     */\n    fonts?: (Font | ExistingItem)[];\n    /**\n     * Defines all allowed actions for the text tool menu. Only buttons for allowed actions are visible and shown in the given order.\n     * @note The `TextAction.DURATION` action is only shown when editing videos.\n     * @example // Defaults to:\n     * [TextAction.DURATION, TextAction.FONT, TextAction.COLOR, TextAction.BACKGROUND_COLOR, TextAction.ALIGNMENT]\n     */\n    actions?: TextAction[];\n    /**\n     * Defines all allowed actions for the text tool that are displayed as overlay buttons on the canvas.\n     * @example // Defaults to:\n     * [CanvasAction.ADD, CanvasAction.DELETE, CanvasAction.BRING_TO_FRONT, CanvasAction.UNDO, CanvasAction.REDO]\n     */\n    canvasActions?: Array<\n      CanvasAction.UNDO |\n      CanvasAction.REDO |\n      CanvasAction.DELETE |\n      CanvasAction.BRING_TO_FRONT |\n      CanvasAction.ADD |\n      CanvasAction.FLIP\n    >;\n    /**\n     * Defines all available colors that can be applied to the text.\n     * The color pipette is always added.\n     * @example // Defaults to:\n     * [\n     *   { color: [1.00, 1.00, 1.00, 1], name: \"White\" },\n     *   { color: [0.49, 0.49, 0.49, 1], name: \"Gray\" },\n     *   { color: [0.00, 0.00, 0.00, 1], name: \"Black\" },\n     *   { color: [0.40, 0.80, 1.00, 1], name: \"Light blue\" },\n     *   { color: [0.40, 0.53, 1.00, 1], name: \"Blue\" },\n     *   { color: [0.53, 0.40, 1.00, 1], name: \"Purple\" },\n     *   { color: [0.87, 0.40, 1.00, 1], name: \"Orchid\" },\n     *   { color: [1.00, 0.40, 0.80, 1], name: \"Pink\" },\n     *   { color: [0.90, 0.31, 0.31, 1], name: \"Red\" },\n     *   { color: [0.95, 0.53, 0.33, 1], name: \"Orange\" },\n     *   { color: [1.00, 0.80, 0.40, 1], name: \"Gold\" },\n     *   { color: [1.00, 0.97, 0.39, 1], name: \"Yellow\" },\n     *   { color: [0.80, 1.00, 0.40, 1], name: \"Olive\" },\n     *   { color: [0.33, 1.00, 0.53, 1], name: \"Green\" },\n     *   { color: [0.33, 1.00, 0.92, 1], name: \"Aquamarin\" },\n     * ]\n     */\n    textColors?: ColorPalette;\n    /**\n     * Defines all available colors that can be applied to the background.\n     * The color pipette is always added.\n     * @example // Defaults to:\n     * [\n     *   { color: [0.00, 0.00, 0.00, 0], name: \"Transparent\" },\n     *   { color: [1.00, 1.00, 1.00, 1], name: \"White\" },\n     *   { color: [0.49, 0.49, 0.49, 1], name: \"Gray\" },\n     *   { color: [0.00, 0.00, 0.00, 1], name: \"Black\" },\n     *   { color: [0.40, 0.80, 1.00, 1], name: \"Light blue\" },\n     *   { color: [0.40, 0.53, 1.00, 1], name: \"Blue\" },\n     *   { color: [0.53, 0.40, 1.00, 1], name: \"Purple\" },\n     *   { color: [0.87, 0.40, 1.00, 1], name: \"Orchid\" },\n     *   { color: [1.00, 0.40, 0.80, 1], name: \"Pink\" },\n     *   { color: [0.90, 0.31, 0.31, 1], name: \"Red\" },\n     *   { color: [0.95, 0.53, 0.33, 1], name: \"Orange\" },\n     *   { color: [1.00, 0.80, 0.40, 1], name: \"Gold\" },\n     *   { color: [1.00, 0.97, 0.39, 1], name: \"Yellow\" },\n     *   { color: [0.80, 1.00, 0.40, 1], name: \"Olive\" },\n     *   { color: [0.33, 1.00, 0.53, 1], name: \"Green\" },\n     *   { color: [0.33, 1.00, 0.92, 1], name: \"Aquamarin\" },\n     * ]\n     */\n    backgroundColors?: ColorPalette;\n    /**\n     * Defines the default text color for newly created text.\n     * @example // Defaults to:\n     * [1, 1, 1, 1]\n     */\n    defaultTextColor?: Color;\n    /**\n     * Whether the user can use emojis as text input.\n     * @note Emojis are not cross-platform compatible. If you use the serialization feature to share edits\n     * across different platforms emojis will be renderd with the system's local set of emojis and will appear differently.\n     * @example // Defaults to:\n     * false\n     */\n    allowEmojis?: boolean;\n  }\n\n  /**\n   * Configuration options for `Tool.TEXT_DESIGN`.\n   */\n  textdesign?: {\n    /**\n     * Defines all available text designs.\n     * New items can be mixed and matched with existing ones.\n     * @example // Defaults to:\n     * [\n     *   { identifier: \"imgly_text_design_blocks\" },\n     *   { identifier: \"imgly_text_design_rotated\" },\n     *   { identifier: \"imgly_text_design_blocks_light\" },\n     *   { identifier: \"imgly_text_design_equal_width\" },\n     *   { identifier: \"imgly_text_design_masked\" },\n     *   { identifier: \"imgly_text_design_celebrate\" },\n     *   { identifier: \"imgly_text_design_sunshine\" },\n     *   { identifier: \"imgly_text_design_masked_badge\" },\n     *   { identifier: \"imgly_text_design_blocks_condensed\" },\n     *   { identifier: \"imgly_text_design_celebrate_simple\" },\n     *   { identifier: \"imgly_text_design_equal_width_fat\" },\n     *   { identifier: \"imgly_text_design_watercolor\" },\n     *   { identifier: \"imgly_text_design_particles\" },\n     *   { identifier: \"imgly_text_design_masked_speech_bubble\" },\n     *   { identifier: \"imgly_text_design_masked_speech_bubble_comic\" },\n     *   { identifier: \"imgly_text_design_multiline\" },\n     * ]\n     */\n    items?: ExistingItem[];\n    /**\n     * Defines all allowed actions for the text design tool that are displayed as overlay buttons on the canvas.\n     * @example // Defaults to:\n     * [CanvasAction.ADD, CanvasAction.DELETE, CanvasAction.INVERT, CanvasAction.BRING_TO_FRONT, CanvasAction.UNDO, CanvasAction.REDO]\n     */\n    canvasActions?: Array<\n      CanvasAction.UNDO |\n      CanvasAction.REDO |\n      CanvasAction.DELETE |\n      CanvasAction.BRING_TO_FRONT |\n      CanvasAction.ADD |\n      CanvasAction.INVERT\n    >;\n    /**\n     * Defines all available colors that can be applied to the text design.\n     * @example // Defaults to:\n     * [\n     *   { color: [1.00, 1.00, 1.00, 1], name: \"White\" },\n     *   { color: [0.49, 0.49, 0.49, 1], name: \"Gray\" },\n     *   { color: [0.00, 0.00, 0.00, 1], name: \"Black\" },\n     *   { color: [0.40, 0.80, 1.00, 1], name: \"Light blue\" },\n     *   { color: [0.40, 0.53, 1.00, 1], name: \"Blue\" },\n     *   { color: [0.53, 0.40, 1.00, 1], name: \"Purple\" },\n     *   { color: [0.87, 0.40, 1.00, 1], name: \"Orchid\" },\n     *   { color: [1.00, 0.40, 0.80, 1], name: \"Pink\" },\n     *   { color: [0.90, 0.31, 0.31, 1], name: \"Red\" },\n     *   { color: [0.95, 0.53, 0.33, 1], name: \"Orange\" },\n     *   { color: [1.00, 0.80, 0.40, 1], name: \"Gold\" },\n     *   { color: [1.00, 0.97, 0.39, 1], name: \"Yellow\" },\n     *   { color: [0.80, 1.00, 0.40, 1], name: \"Olive\" },\n     *   { color: [0.33, 1.00, 0.53, 1], name: \"Green\" },\n     *   { color: [0.33, 1.00, 0.92, 1], name: \"Aquamarin\" },\n     * ]\n     */\n    colors?: ColorPalette;\n  }\n\n  /**\n   * Configuration options for `Tool.OVERLAY`.\n   */\n  overlay?: {\n    /**\n     * Defines all available overlays.\n     * New items can be mixed and matched with existing ones.\n     * `NONE` is always added.\n     * @example // Defaults to:\n     * [\n     *   { identifier: \"imgly_overlay_golden\" },\n     *   { identifier: \"imgly_overlay_lightleak1\" },\n     *   { identifier: \"imgly_overlay_rain\" },\n     *   { identifier: \"imgly_overlay_mosaic\" },\n     *   { identifier: \"imgly_overlay_vintage\" },\n     *   { identifier: \"imgly_overlay_paper\" },\n     * ]\n     */\n    items?: (Overlay | ExistingItem)[];\n    /**\n     * Defines all allowed blend modes for the overlays.\n     * @example // Defaults to:\n     * [BlendMode.NORMAL, BlendMode.MULTIPLY, BlendMode.OVERLAY, BlendMode.SCREEN, BlendMode.LIGHTEN, BlendMode.SOFT_LIGHT, BlendMode.HARD_LIGHT, BlendMode.DARKEN, BlendMode.COLOR_BURN]\n     */\n    blendModes?: BlendMode[];\n  }\n\n  /**\n   * Configuration options for `Tool.FRAME`.\n   */\n  frame?: {\n    /**\n     * Defines all available frames.\n     * New items can be mixed and matched with existing ones.\n     * `NONE` is always added.\n     * @example // Defaults to:\n     * [\n     *   { identifier: \"imgly_frame_dia\" },\n     *   { identifier: \"imgly_frame_art_decor\" },\n     *   { identifier: \"imgly_frame_black_passepartout\" },\n     *   { identifier: \"imgly_frame_wood_passepartout\" },\n     * ]\n     */\n    items?: (Frame | ExistingItem)[];\n    /**\n     * Defines all allowed actions for the frame tool menu. Only buttons for allowed actions are visible and shown in the given order.\n     * @example // Defaults to:\n     * [FrameAction.REPLACE, FrameAction.WIDTH, FrameAction.OPACITY]\n     */\n    actions?: FrameAction[];\n  }\n\n  /**\n   * Configuration options for `Tool.BRUSH`.\n   */\n  brush?: {\n    /**\n     * Defines all allowed actions for the brush tool menu. Only buttons for allowed actions are visible and shown in the given order.\n     * @example // Defaults to:\n     * [BrushAction.COLOR, BrushAction.SIZE, BrushAction.HARDNESS]\n     */\n    actions?: BrushAction[];\n    /**\n     * Defines all allowed actions for the brush tool that are displayed as overlay buttons on the canvas.\n     * Only buttons for allowed actions are visible.\n     * @example // Defaults to:\n     * [CanvasAction.DELETE, CanvasAction.BRING_TO_FRONT, CanvasAction.UNDO, CanvasAction.REDO]\n     */\n    canvasActions?: Array<\n      CanvasAction.UNDO |\n      CanvasAction.REDO |\n      CanvasAction.DELETE |\n      CanvasAction.BRING_TO_FRONT\n    >;\n    /**\n     * Defines all available colors that can be applied to the brush.\n     * The color pipette is always added.\n     * @example // Defaults to:\n     * [\n     *   { color: [1.00, 1.00, 1.00, 1], name: \"White\" },\n     *   { color: [0.49, 0.49, 0.49, 1], name: \"Gray\" },\n     *   { color: [0.00, 0.00, 0.00, 1], name: \"Black\" },\n     *   { color: [0.40, 0.80, 1.00, 1], name: \"Light blue\" },\n     *   { color: [0.40, 0.53, 1.00, 1], name: \"Blue\" },\n     *   { color: [0.53, 0.40, 1.00, 1], name: \"Purple\" },\n     *   { color: [0.87, 0.40, 1.00, 1], name: \"Orchid\" },\n     *   { color: [1.00, 0.40, 0.80, 1], name: \"Pink\" },\n     *   { color: [0.90, 0.31, 0.31, 1], name: \"Red\" },\n     *   { color: [0.95, 0.53, 0.33, 1], name: \"Orange\" },\n     *   { color: [1.00, 0.80, 0.40, 1], name: \"Gold\" },\n     *   { color: [1.00, 0.97, 0.39, 1], name: \"Yellow\" },\n     *   { color: [0.80, 1.00, 0.40, 1], name: \"Olive\" },\n     *   { color: [0.33, 1.00, 0.53, 1], name: \"Green\" },\n     *   { color: [0.33, 1.00, 0.92, 1], name: \"Aquamarin\" },\n     * ]\n     */\n    colors?: ColorPalette;\n    /**\n     * Defines the default brush color.\n     * @example // Defaults to:\n     * [1, 1, 1, 1]\n     */\n    defaultColor?: Color;\n    /**\n     * The minimum size that a brush can have. This value is measured in relation to the\n     * smaller side of the image that the user is editing. If the value is `null` the\n     * minimum brush size is set to the absolute size of a single pixel of the edited image.\n     * @example // Defaults to:\n     * null\n     */\n    minimumSize?: number;\n    /**\n     * The maximum size that a brush can have. This value is measured in relation to the\n     * smaller side of the image that the user is editing.\n     * @example // Defaults to:\n     * 0.125\n     */\n    maximumSize?: number;\n    /**\n     * The default size of the brush. This value is measured in relation to the\n     * smaller side of the image that the user is editing.\n     * @example // Defaults to:\n     * 0.05\n     */\n    defaultSize?: number;\n    /**\n     * The minimum hardness factor a brush can have.\n     * @example // Defaults to:\n     * 0\n     */\n    minimumHardness?: number;\n    /**\n     * The maximum hardness factor a brush can have.\n     * @example // Defaults to:\n     * 1\n     */\n    maximumHardness?: number;\n    /**\n     * The default hardness factor of the brush.\n     * @example // Defaults to:\n     * 0.5\n     */\n    defaultHardness?: number;\n  }\n\n  /**\n   * Export configuration options.\n   */\n  export?: {\n    /**\n     * Image export configuration if the editor supports image editing.\n     */\n    image?: {\n      /**\n       * The image export type.\n       * @example // Defaults to:\n       * ImageExportType.FILE_URL\n       */\n      exportType?: ImageExportType;\n      /**\n       * The image file format of the generated high resolution image.\n       * @example // Defaults to:\n       * ImageFormat.JPEG\n       */\n      format?: ImageFormat;\n      /**\n       * The compression quality to use when creating the output image with a lossy file format.\n       * @example // Defaults to:\n       * 0.9\n       */\n      quality?: number;\n    }\n    /**\n     * Video export configuration if the editor supports video editing.\n     */\n    video?: {\n      /**\n       * The video container format to export.\n       * @example // Defaults to:\n       * VideoFormat.MP4\n       */\n      format?: VideoFormat;\n      /**\n       * The video codec to use for the exported video.\n       * @example // Defaults to:\n       * VideoCodec.H264\n       */\n      codec?: VideoCodec;\n      /**\n       * The compression quality to use when exporting to VideoCodec.HEVC.\n       * @example // Defaults to:\n       * 0.9\n       */\n      quality?: number;\n      /**\n       * The bit rate in bits per second to use when exporting to VideoCodec.H264.\n       * @example // Defaults to:\n       * null\n       */\n      bitRate?: number | null;\n      /**\n       * Whether the video editor should include the video segments of the composition\n       * in the `VideoEditorResult`.\n       * @note If enabled, you need to release the result via `VideoEditorResult.release()`\n       * after processing the video segments in order to prevent memory leaks.\n       * \n       * @example // Defaults to:\n       * false\n       */\n       segments?: boolean;\n    }\n    /**\n     * The filename for the exported data if the `exportType` is not `ImageExportType.DATA_URL`.\n     * The correct filename extension will be automatically added\n     * based on the selected export format. It can be an absolute path or file URL or a relative path.\n     * If some relative path is chosen it will be created in a temporary system directory and overwritten\n     * if the corresponding file already exists. If the value is `null` an new temporary file will be\n     * created for every export.\n     * @note Please make sure that the provided `filename` is valid for the different devices and that\n     * your application has the corresponding access rights to write to the desired location. For Android,\n     * you will want to make sure to set this inside one of the directories conforming to scoped storage:\n     * - DCIM/\n     * - Pictures/\n     * \n     * For Videos you can additionally use:\n     *  - Movies/\n     * @example // Defaults to:\n     * null\n     */\n    filename?: string | null;\n    /** \n     * If enabled, the photo/video will be rendered and exported in the defined output format\n     * even if no changes have been applied. Otherwise, the input asset will be passed \n     * through and might not match the defined output format.\n     * @example // Defaults to:\n     * false\n     */\n    force?: boolean;\n    /**\n     * Export configuration of the serialized image and video editing operations that were applied to\n     * the input media loaded into the editor. This also allows to recover these operations the next\n     * time the editor is opened again.\n     */\n    serialization?: {\n      /**\n       * Whether the serialization of the editing operations should be exported.\n       * @example // Defaults to:\n       * false\n       */\n      enabled?: boolean;\n      /**\n       * The serialization export type.\n       * @example // Defaults to:\n       * SerializationExportType.FILE_URL\n       */\n      exportType?: SerializationExportType;\n      /**\n       * The file URI for the exported serialization data if the `exportType` is `SerializationExportType.FILE_URL`.\n       * The filename extension for JSON will be automatically added.\n       * If the value is `null` an new temporary file will be created for every export based on the filename for \n       * the exported image or video data.\n       * @note Please make sure that the provided `filename` is a valid file URI for the different devices and that\n       * your application has the corresponding access rights to write to the desired location.\n       * @example // Defaults to:\n       * null\n       */\n      filename?: string | null;\n      /**\n       * Whether the serialization data should include the original input image data.\n       * @example // Defaults to:\n       * false\n       */\n      embedSourceImage?: boolean;\n    }\n  }\n\n  /**\n   * Defines the theme that should be used to style the user interface.\n   * @note This runtime theming configuration is currently not supported on Android.\n   * Please use the compile-time theming configuration instead:\n   * https://docs.photoeditorsdk.com/guides/android/v7_1/customization/themes#color-theming\n   * @example // Defaults to:\n   * ExistingTheme.DARK\n   */\n  theme?: ExistingTheme | string;\n\n  /**\n   * Customization options.\n   */\n  custom?: {\n    /**\n     * Theming options to change the user interface appearance. This allows to alter predefined existing\n     * theme presets or to create new themes which can be enabled when their corresponding key (name)\n     * is set as the `Configuration.theme`.\n     * @note This runtime theming configuration is currently not supported on Android.\n     * Please use the compile-time theming configuration instead:\n     * https://docs.photoeditorsdk.com/guides/android/v7_1/customization/themes#color-theming\n     */\n    themes?: {\n      [key: string]: Theme;\n    }\n  }\n}\n\n/** An image and/or video editing tool. */\nexport enum Tool {\n  /** A tool to compose a video from multiple video clips and to trim the timeline of the composition and the individual clips. */\n  COMPOSITION = \"composition\",\n  /** A tool to trim the timeline of videos. */\n  TRIM = \"trim\",\n  /** A tool to edit the audio track of videos. */\n  AUDIO = \"audio\",\n  /** A tool to apply an transformation, such as cropping or rotation. */\n  TRANSFORM = \"transform\",\n  /** A tool to apply an image filter effect. */\n  FILTER = \"filter\",\n  /** A tool to apply image adjustments. */\n  ADJUSTMENT = \"adjustment\",\n  /** A tool to add blur. */\n  FOCUS = \"focus\",\n  /** A tool to add stickers. */\n  STICKER = \"sticker\",\n  /** A tool to add texts. */\n  TEXT = \"text\",\n  /** A tool to add text designs. */\n  TEXT_DESIGN = \"textdesign\",\n  /** A tool to add an overlay. */\n  OVERLAY = \"overlay\",\n  /** A tool to add a frame. */\n  FRAME = \"frame\",\n  /** A tool to add drawings. */\n  BRUSH = \"brush\",\n}\n\n/** An image format. */\nexport enum ImageFormat {\n  JPEG = \"image/jpeg\",\n  PNG = \"image/png\",\n  HEIF = \"image/heif\",\n  TIFF = \"image/tiff\",\n}\n\n/** A video format. */\nexport enum VideoFormat {\n  MP4 = \"video/mp4\",\n  MOV = \"video/quicktime\",\n}\n\n/** A video codec. */\nexport enum VideoCodec {\n  H264 = \"h264\",\n  HEVC = \"hevc\",\n}\n\n/** An image export type. */\nexport enum ImageExportType {\n  /** The exported image is saved to a file and the corresponding file URL is returned. */\n  FILE_URL = \"file-url\",\n  /** The exported image is returned as a data URL which encodes the exported image. */\n  DATA_URL = \"data-url\",\n}\n\n/** A serialization export type. */\nexport enum SerializationExportType {\n  /** The exported serialization is saved to a file and the corresponding file URL is returned. */\n  FILE_URL = \"file-url\",\n  /** The exported serialization is returned as an object. */\n  OBJECT = \"object\",\n}\n\n/** An adjustment tool. */\nexport enum AdjustmentTool {\n  BRIGHTNESS = \"brightness\",\n  CONTRAST = \"contrast\",\n  SATURATION = \"saturation\",\n  CLARITY = \"clarity\",\n  SHADOWS = \"shadows\",\n  HIGHLIGHTS = \"highlights\",\n  EXPOSURE = \"exposure\",\n  GAMMA = \"gamma\",\n  BLACKS = \"blacks\",\n  WHITES = \"whites\",\n  TEMPERATURE = \"temperature\",\n  SHARPNESS = \"sharpness\",\n}\n\n/** A blur tool. */\nexport enum FocusTool {\n  NONE = \"none\",\n  RADIAL = \"radial\",\n  MIRRORED = \"mirrored\",\n  LINEAR = \"linear\",\n  GAUSSIAN = \"gaussian\",\n}\n\n/** A force trim mode. */\nexport enum ForceTrimMode {\n  /**\n   * Will always automatically present the composition tool or the trim tool\n   * after opening the editor and force your users to change the length of the video(s).\n   *\n   * The composition tool will only be used if it is included in your subscription and if it is included in `tools`\n   * or if both the composition and trim tool are not included in `tools`.\n   * Otherwise, the trim tool is used if it is included in your subscription.\n   */\n  ALWAYS = \"always\",\n  /**\n   * Will automatically present the composition or trim tool if needed.\n   *\n   * Will only present:\n   * - the composition tool, if your initial composition is longer than `trim.maximumDuration` or shorter than `trim.minimumDuration`, or\n   * - the trim tool, if your initial video is longer than `trim.maximumDuration`. If the video is shorter than `trim.minimumDuration` an alert\n   *   is displayed as soon as the editor is opened and after dismissing the alert, the editor is closed.\n   *\n   * The composition tool will only be used if it is included in your subscription and if it is included in `tools`\n   * or if both the composition and trim tool are not included in `tools`.\n   * Otherwise, the trim tool is used if it is included in your subscription.\n   */\n  IF_NEEDED = \"ifneeded\",\n  /**\n   * Will automatically trim the video to `trim.maximumDuration` without opening any tool.\n   * If the length of the initially loaded video(s) is shorter than `trim.minimumDuration` and the user has the option to add more videos (because of composition),\n   * an alert will be shown when tapping the export button and after dismissing the alert, the composition tool will automatically open.\n   * If no additional videos can be added, an alert is displayed as soon as the editor is opened and after dismissing the alert, the editor is closed.\n   */\n  SILENT = \"silent\",\n}\n\n/** A tint mode. */\nexport enum TintMode {\n  NONE = \"none\",\n  SOLID = \"solid\",\n  COLORIZED = \"colorized\",\n}\n\n/** A blend mode. */\nexport enum BlendMode {\n  NORMAL = \"normal\",\n  OVERLAY = \"overlay\",\n  SOFT_LIGHT = \"softlight\",\n  HARD_LIGHT = \"hardlight\",\n  MULTIPLY = \"multiply\",\n  DARKEN = \"darken\",\n  COLOR_BURN = \"colorburn\",\n  SCREEN = \"screen\",\n  LIGHTEN = \"lighten\",\n}\n\n/** A frame layout mode. */\nexport enum FrameLayoutMode {\n  HORIZONTAL_INSIDE = \"horizontal-inside\",\n  VERTICAL_INSIDE = \"vertical-inside\",\n}\n\n/** A frame tile mode. */\nexport enum FrameTileMode {\n  REPEAT = \"repeat\",\n  STRETCH = \"stretch\",\n}\n\n/** An alignment mode. */\nexport enum AlignmentMode {\n  CENTER = \"center\",\n  TOP_LEFT = \"top-left\",\n  TOP_RIGHT = \"top-right\",\n  BOTTOM_LEFT = \"bottom-left\",\n  BOTTOM_RIGHT = \"bottom-right\"\n}\n\n/** A canvas action. */\nexport enum CanvasAction {\n  UNDO = \"undo\",\n  REDO = \"redo\",\n  DELETE = \"delete\",\n  BRING_TO_FRONT = \"bringtofront\",\n  ADD = \"add\",\n  FLIP = \"flip\",\n  INVERT = \"invert\",\n  SOUND_ON_OFF = \"soundonoff\",\n  PLAY_PAUSE = \"playpause\",\n  REMOVE_BACKGROUND = \"removebackground\",\n}\n\n/** A sticker action. */\nexport enum StickerAction {\n  COLOR = \"color\",\n  STRAIGHTEN = \"straighten\",\n  BRIGHTNESS = \"brightness\",\n  CONTRAST = \"contrast\",\n  SATURATION = \"saturation\",\n  REPLACE = \"replace\",\n  OPACITY = \"opacity\",\n  REMOVE_BACKGROUND = \"removebackground\",\n  DURATION = \"duration\"\n}\n\n/** A text action. */\nexport enum TextAction {\n  FONT = \"font\",\n  COLOR = \"color\",\n  BACKGROUND_COLOR = \"backgroundcolor\",\n  ALIGNMENT = \"alignment\",\n  DURATION = \"duration\"\n}\n\n/** A frame action. */\nexport enum FrameAction {\n  REPLACE = \"replace\",\n  WIDTH = \"width\",\n  OPACITY = \"opacity\",\n}\n\n/** A brush action. */\nexport enum BrushAction {\n  COLOR = \"color\",\n  SIZE = \"size\",\n  HARDNESS = \"hardness\",\n}\n\n/** A predefined theme preset to define the user interface appearance. */\nexport enum ExistingTheme {\n  /** A user interface style with dark appearance. */\n  DARK = \"dark\",\n  /** A user interface style with light appearance. */\n  LIGHT = \"light\",\n  /** A theme that switches dynamically between the light and the\n   * dark theme based on the active system user interface style. */\n  DYNAMIC = \"dynamic\",\n}\n\n/**\n * A color can be represented as:\n * - `number[]`: which encodes a single gray value or a RGB(A) tuple of floating point values where\n *   each channel is defined in the range of `[0, 1]`.\n * - `string`: which is a hex color code string of a 12-bit RGB, 24-bit RGB, or 32-bit ARGB color value.\n * - `number`: which is the the binary representation of a 32-bit ARGB color value.\n *   The function `processColor` in React Native returns colors in this format.\n */\nexport type Color = number[] | number | string | null;\n\n/** A named color. */\nexport interface NamedColor {\n  /** The color. */\n  color: Color;\n  /** The name of the color which is also used for accessibliblity. */\n  name: string;\n}\n\n/** A color palette of named colors. */\nexport type ColorPalette = NamedColor[];\n\n/** A crop aspect ratio. */\nexport interface CropRatio {\n  /** The width of the ratio. */\n  width: number;\n  /** The height of the ratio. */\n  height: number;\n  /**\n   * If enabled the `width` and `height` of a ratio can be toggled in the UI.\n   * @example // Defaults to:\n   * false\n   */\n  toggleable?: boolean;\n  /**\n   * A displayable name for the item which is also used for accessibliblity.\n   * If `null` the name is automatically generated from the `width` and `height` values and\n   * the name will always be overwritten by this auto-generated name if the user toggles the\n   * aspect when `toggleable` is enabled.\n   * @example // Defaults to:\n   * null\n   */\n  name?: string;\n}\n\n/** A unique identifiable item. */\nexport interface UniqueItem {\n  /** A unqiue string that makes the item unique identifiable. */\n  identifier: string;\n}\n\n/** An existing item. */\nexport interface ExistingItem extends UniqueItem {}\n\n/** A named and unique identifiable item. */\nexport interface NamedItem extends UniqueItem {\n  /** A displayable name for the item which is also used for accessibliblity. */\n  name: string;\n}\n\n/** A media item. */\nexport interface MediaItem extends UniqueItem {\n  /**\n   * The title of the media item.\n   * @example // Defaults to:\n   * null\n   */\n  title?: string;\n  /**\n   * The artist of the media item.\n   * @example // Defaults to:\n   * null\n   */\n  artist?: string;\n}\n\n/** A video clip category. */\nexport interface VideoClipCategory extends NamedItem {\n  /**\n   * A URI for the thumbnail image of the category.\n   * If `null` a placeholder image will be used.\n   */\n  thumbnailURI?: AssetURI;\n  /**\n   * Items of the category.\n   * If `null` an empty category will be created.\n   * @example // Defaults to:\n   * null\n   */\n  items?: (VideoClip)[];\n}\n\n/** A video clip. */\nexport interface VideoClip extends MediaItem {\n  /**\n   * A URI for the thumbnail image of the video clip.\n   * If `null` the thumbnail will be automatically generated from the `videoURI`.\n   * @example // Defaults to:\n   * null\n   */\n  thumbnailURI?: AssetURI;\n  /** A URI for the video clip.\n   * @note Remote resources are not optimized and therefore should be downloaded\n   * in advance and then passed to the editor as local resources.\n   */\n  videoURI: AssetURI;\n}\n\n/** A audio clip category. */\nexport interface AudioClipCategory extends NamedItem {\n  /**\n   * A URI for the thumbnail image of the category.\n   * If `null` a placeholder image will be used.\n   */\n  thumbnailURI?: AssetURI;\n  /**\n   * Items of the category.\n   * If `null` an empty category will be created.\n   * @example // Defaults to:\n   * null\n   */\n  items?: (AudioClip)[];\n}\n\n/** An audio clip. */\nexport interface AudioClip extends MediaItem {\n  /**\n   * A URI for the thumbnail image of the audio clip.\n   * If `null` a placeholder image will be used.\n   * @example // Defaults to:\n   * null\n   */\n  thumbnailURI?: AssetURI;\n  /**\n   * The duration of the audio clip in seconds.\n   * If `null` the duration will be automatically derived from the asset.\n   * @example // Defaults to:\n   * null\n   */\n  duration?: number;\n  /** A URI for the audio clip.\n   * @note Remote resources are not optimized and therefore should be downloaded\n   * in advance and then passed to the editor as local resources.\n   */\n  audioURI: AssetURI;\n}\n\n/** An existing filter category. */\nexport interface ExistingFilterCategory extends ExistingItem {\n  /**\n   * Items of the category which can be existing or new defined filters.\n   * If `null` the referenced existing category will keep its predefined items.\n   * @example // Defaults to:\n   * null\n   */\n  items?: (Filter | ExistingItem)[];\n}\n\n/** A filter category. */\nexport interface FilterCategory extends NamedItem {\n  /**\n   * A URI for the thumbnail image of the category. If `null` the category will not have a thumbnail\n   * image which won't be required if `flattenCategories` is enabled for the `Tool.FILTER`.\n   * @example // Defaults to:\n   * null\n   */\n  thumbnailURI?: AssetURI;\n  /**\n   * Items of the category which can be existing or new defined filters.\n   * If `null` an empty category will be created.\n   * @example // Defaults to:\n   * null\n   */\n  items?: (Filter | ExistingItem)[];\n}\n\n/** An image filter. */\nexport type Filter = LUTFilter | DuoToneFilter;\n\n/** A look up table (LUT) image filter. */\nexport interface LUTFilter extends NamedItem {\n  /** A URI for the look up table (LUT) image. */\n  lutURI: AssetURI;\n  /**\n   * The number of horizontal tiles in the LUT image.\n   * @example // Defaults to:\n   * 5\n   */\n  horizontalTileCount?: number;\n  /**\n   * The number of vertical tiles in the LUT image.\n   * @example // Defaults to:\n   * 5\n   */\n  verticalTileCount?: number;\n}\n\n/** A duotone image filter. */\nexport interface DuoToneFilter extends NamedItem {\n  /** The duotone color that is mapped to light colors of the input image. */\n  lightColor: Color;\n  /** The duotone color that is mapped to dark colors of the input image. */\n  darkColor: Color;\n}\n\n/** An existing sticker category. */\nexport interface ExistingStickerCategory extends ExistingItem {\n  /**\n   * Items of the category which can be existing or new defined stickers.\n   * If `null` the referenced existing category will keep its predefined items.\n   * @example // Defaults to:\n   * null\n   */\n  items?: (Sticker | ExistingItem)[];\n}\n\n/** A sticker category. */\nexport interface StickerCategory extends NamedItem {\n  /** A URI for the thumbnail image of the category. */\n  thumbnailURI: AssetURI;\n  /**\n   * Items of the category which can be existing or new defined stickers.\n   * If `null` an empty category will be created.\n   * @example // Defaults to:\n   * null\n   */\n  items?: (Sticker | ExistingItem)[];\n}\n\n/** An existing sticker provider category. */\nexport interface ExistingStickerProviderCategory extends ExistingItem {\n  /**\n   * The used sticker provider that must match the category's identifier.\n   */\n   provider: GiphyStickerProvider;\n}\n\n/**\n * A GIPHY sticker provider.\n * @note This sticker provider requires to use the identifier `imgly_sticker_category_giphy` for its `ExistingStickerProviderCategory`.\n */\nexport interface GiphyStickerProvider {\n  /**\n   * The key used to authorize API requests, obtained from GIPHY.\n   */\n  apiKey: string;\n  /**\n   * The default language for regional content in 2-letter ISO 639-1 language code.\n   * If `null` the language setting of the current locale is used.  \n   * @example // Defaults to:\n   * null\n   */\n  language?: string;\n  /**\n   * The audience category used for content filtering. Available values are `\"g\"`, `\"pg\"`, `\"pg-13\"`, `\"r\"`.\n   * @example // Defaults to:\n   * \"g\"\n   */\n  rating?: string;\n}\n\n/** A sticker. */\nexport interface Sticker extends NamedItem {\n  /**\n   * A URI for the thumbnail image of the sticker.\n   * If `null` the thumbnail will be automatically generated from the `stickerURI`.\n   * @example // Defaults to:\n   * null\n   */\n  thumbnailURI?: AssetURI;\n  /** A URI for the sticker image. */\n  stickerURI: AssetURI;\n  /**\n   * The sticker tint mode.\n   * @example // Defaults to:\n   * TintMode.NONE\n   */\n  tintMode?: TintMode;\n  /**\n   * If enabled the brightness, contrast, and saturation of a sticker can be changed if\n   * the corresponding `StickerAction`s in the `Tool.STICKER` are enabled.\n   * @example // Defaults to:\n   * false\n   */\n  adjustments?: boolean;\n}\n\n/** A font. */\nexport interface Font extends NamedItem {\n  /**\n   * The actual font name or system font name, e.g. `Chalkduster`.\n   */\n  fontName: string;\n  /**\n   * A URI for the font file. `TTF` and `OTF` fonts are allowed.\n   * If `null` the `fontName` is assumed to be a system font.\n   * @example // Defaults to:\n   * null\n   * */\n  fontURI?: AssetURI;\n}\n\n/** An overlay. */\nexport interface Overlay extends NamedItem {\n  /**\n   * A URI for the thumbnail image of the overlay.\n   * If `null` the thumbnail will be automatically generated form the `overlayURI`.\n   * @example // Defaults to:\n   * null\n   */\n  thumbnailURI?: AssetURI;\n  /** A URI for the overlay image. */\n  overlayURI: AssetURI;\n  /** The default blend mode that is used to apply the overlay. */\n  defaultBlendMode: BlendMode;\n}\n\n/** A frame. */\nexport interface Frame extends NamedItem {\n  /** A URI for the thumbnail image of the frame. */\n  thumbnailURI: AssetURI;\n  /**\n   * The layout mode of the patches of the frame.\n   * @example // Defaults to:\n   * FrameLayoutMode.HORIZONTAL_INSIDE\n   */\n  layoutMode?: FrameLayoutMode;\n  /** The relative scale of the frame which is defined in relatation to the shorter side of the\n   * resulting output image. */\n  relativeScale: number;\n  /** Images for the 12-patch layout of a dynamic frame that automatically adapts to\n   * any output image resolution. */\n  imageGroups: {\n    /**\n     * The top image group.\n     * If `null` there is no top group.\n     * @example // Defaults to:\n     * null\n     */\n    top?: FrameImageGroup;\n    /**\n     * The left image group.\n     * If `null` there is no left group.\n     * @example // Defaults to:\n     * null\n     */\n    left?: FrameImageGroup;\n    /**\n     * The right image group.\n     * If `null` there is no right group.\n     * @example // Defaults to:\n     * null\n     */\n    right?: FrameImageGroup;\n    /**\n     * The bottom image group.\n     * If `null` there is no bottom group.\n     * @example // Defaults to:\n     * null\n     */\n    bottom?: FrameImageGroup;\n  }\n}\n\n/** An image group for the 12-patch layout of a dynamic frame. */\nexport interface FrameImageGroup {\n  /**\n   * A URI for the start image.\n   * If `null` there is no start image.\n   * @example // Defaults to:\n   * null\n   */\n  startURI?: AssetURI;\n  /**\n   * A URI for the middle image.\n   */\n  midURI: AssetURI;\n  /**\n   * The render mode for the middle image.\n   * @example // Defaults to:\n   * FrameTileMode.REPEAT\n   */\n  midMode?: FrameTileMode;\n  /**\n   * A URI for the end image.\n   * If `null` there is no end image.\n   * @example // Defaults to:\n   * null\n   */\n  endURI?: AssetURI;\n}\n\n/** A theme which defines the appearance of the user interface. */\nexport interface Theme {\n  /**\n   * The tint color of highlighted user interface elements.\n   * If `null` it defaults to the system tint color if available or the value of the theme that is modified.\n   * @example // Defaults to:\n   * null\n   */\n  tint?: Color;\n  /**\n   * The primary color which is mainly used for the text and the icons on the menu bar.\n   * If `null` it defaults to the `ExistingTheme.DARK`'s value or the value of the theme that is modified.\n   * @example // Defaults to:\n   * null\n   */\n  primary?: Color;\n  /**\n   * The background color of the canvas.\n   * If `null` it defaults to the `ExistingTheme.DARK`'s value or the value of the theme that is modified.\n   * @example // Defaults to:\n   * null\n   */\n  background?: Color;\n  /**\n   * The background color of the menu and accesory controls above the menu.\n   * If `null` it defaults to the `ExistingTheme.DARK`'s value or the value of the theme that is modified.\n   * @example // Defaults to:\n   * null\n   */\n  menuBackground?: Color;\n  /**\n   * The background color of the toolbar that hosts the title of the active tool, the discard,\n   * and the apply button.\n   * If `null` it defaults to the `ExistingTheme.DARK`'s value or the value of the theme that is modified.\n   * @example // Defaults to:\n   * null\n   */\n  toolbarBackground?: Color;\n}\n"],"mappings":"AA4nCA,WAAYA,IAAI,aAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAA,OAAJA,IAAI;AAAA;AA8BhB,WAAYC,WAAW,aAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAQvB,WAAYC,WAAW,aAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAMvB,WAAYC,UAAU,aAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAMtB,WAAYC,eAAe,aAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAQ3B,WAAYC,uBAAuB,aAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAA,OAAvBA,uBAAuB;AAAA;AAQnC,WAAYC,cAAc,aAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAgB1B,WAAYC,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AASrB,WAAYC,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAiCzB,WAAYC,QAAQ,aAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAOpB,WAAYC,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAarB,WAAYC,eAAe,aAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAM3B,WAAYC,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAMzB,WAAYC,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AASzB,WAAYC,YAAY,aAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAcxB,WAAYC,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAazB,WAAYC,UAAU,aAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAStB,WAAYC,WAAW,aAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAOvB,WAAYC,WAAW,aAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAOvB,WAAYC,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
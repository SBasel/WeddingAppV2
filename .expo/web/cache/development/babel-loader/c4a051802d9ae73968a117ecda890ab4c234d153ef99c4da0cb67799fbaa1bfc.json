{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport auth from '@react-native-firebase/auth';\nimport { GoogleSignin } from '@react-native-community/google-signin';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function SignUp() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  var handleEmailSignUp = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield auth().createUserWithEmailAndPassword(email, password);\n      } catch (error) {\n        console.error(\"Error signing up with email and password:\", error);\n      }\n    });\n    return function handleEmailSignUp() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.heading,\n      children: \"Sign Up for TSM2.0\"\n    })\n  });\n}","map":{"version":3,"names":["auth","GoogleSignin","jsx","_jsx","SignUp","_React$useState","React","useState","_React$useState2","_slicedToArray","email","setEmail","_React$useState3","_React$useState4","password","setPassword","handleEmailSignUp","_ref","_asyncToGenerator","createUserWithEmailAndPassword","error","console","apply","arguments","View","style","styles","container","children","Text","heading"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/comp/SignUp.js"],"sourcesContent":["import { View, Text, Button, TextInput } from 'react-native';\nimport auth from '@react-native-firebase/auth';\nimport { GoogleSignin } from '@react-native-community/google-signin';\n\n\nexport function SignUp() {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const handleEmailSignUp = async () => {\n  try {\n    await auth().createUserWithEmailAndPassword(email, password);\n    // You can navigate the user to your app's main screen after signing up here\n  } catch (error) {\n    console.error(\"Error signing up with email and password:\", error);\n  }\n};\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Sign Up for TSM2.0</Text>\n      {/* Hier können weitere SignUp-spezifische Elemente wie Eingabefelder hinzugefügt werden */}\n    </View>\n  );\n}\n"],"mappings":";;;;;;AACA,OAAOA,IAAI,MAAM,6BAA6B;AAC9C,SAASC,YAAY,QAAQ,uCAAuC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGrE,OAAO,SAASC,MAAMA,CAAA,EAAG;EACrB,IAAAC,eAAA,GAA0BC,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAArCK,KAAK,GAAAF,gBAAA;IAAEG,QAAQ,GAAAH,gBAAA;EACtB,IAAAI,gBAAA,GAAgCN,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA3CE,QAAQ,GAAAD,gBAAA;IAAEE,WAAW,GAAAF,gBAAA;EAE5B,IAAMG,iBAAiB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACxC,IAAI;QACF,MAAMlB,IAAI,CAAC,CAAC,CAACmB,8BAA8B,CAACT,KAAK,EAAEI,QAAQ,CAAC;MAE9D,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAAA,gBAPSJ,iBAAiBA,CAAA;MAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAO1B;EAGC,OACEpB,IAAA,CAACqB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BzB,IAAA,CAAC0B,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,OAAQ;MAAAF,QAAA,EAAC;IAAkB,CAAM;EAAC,CAElD,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}
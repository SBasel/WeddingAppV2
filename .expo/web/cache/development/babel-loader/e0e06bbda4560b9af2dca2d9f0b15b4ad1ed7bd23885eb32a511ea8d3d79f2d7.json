{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport app from \"./firebaseConfig\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLogin = _useState6[0],\n    setIsLogin = _useState6[1];\n  var handleLoginPress = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var auth = getAuth(app);\n      try {\n        var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n        setIsLogin(true);\n      } catch (error) {\n        console.error(\"Error signing in:\", error);\n      }\n    });\n    return function handleLoginPress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  if (isLogin) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Welcome, you are logged in!\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"TSM2.0\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(Pressable, {\n      style: styles.loginButton,\n      onPress: handleLoginPress,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"Login\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontSize: 24\n  },\n  loginButton: {\n    marginTop: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: '#007BFF',\n    borderRadius: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginText: {\n    color: 'white',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Pressable","TextInput","app","getAuth","signInWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLogin","setIsLogin","handleLoginPress","_ref","_asyncToGenerator","auth","userCredential","error","console","apply","arguments","style","styles","container","children","heading","placeholder","value","onChangeText","input","secureTextEntry","loginButton","onPress","loginText","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginTop","paddingVertical","paddingHorizontal","borderRadius","color"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Pressable, TextInput } from 'react-native';\nimport app from './firebaseConfig';  // Adjust path accordingly\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nexport default function App() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(false);\n\n  const handleLoginPress = async () => {\n    const auth = getAuth(app);\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      setIsLogin(true);\n    } catch (error) {\n      console.error(\"Error signing in:\", error);\n    }\n  };\n\n  if(isLogin) {\n    return (\n      <View style={styles.container}>\n        <Text>Welcome, you are logged in!</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>TSM2.0</Text>\n      <TextInput \n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        style={styles.input}\n      />\n      <TextInput \n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={styles.input}\n      />\n      <Pressable style={styles.loginButton} onPress={handleLoginPress}>\n        <Text style={styles.loginText}>Login</Text>\n      </Pressable>\n    </View>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  heading: {\n    fontSize: 24,  // changed from '2rem' to 24 for compatibility\n  },\n  loginButton: {\n    marginTop: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: '#007BFF',\n    borderRadius: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loginText: {\n    color: 'white',\n    fontSize: 16,\n  },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontColorDropdown } from \"./fontHandler/FontColorDropdown.js\";\nimport { FontFamilyDropdown } from \"./fontHandler/FontFamilyDropdown.js\";\nimport { FontSizeDropdown } from \"./fontHandler/FontSizeDropdown.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function TextEditor(_ref) {\n  var isTextModalVisible = _ref.isTextModalVisible,\n    setTextModalVisible = _ref.setTextModalVisible,\n    text = _ref.text,\n    setText = _ref.setText,\n    textColor = _ref.textColor,\n    setTextColor = _ref.setTextColor,\n    fontFamily = _ref.fontFamily,\n    setFontFamily = _ref.setFontFamily,\n    fontSize = _ref.fontSize,\n    setFontSize = _ref.setFontSize;\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: isTextModalVisible,\n    onRequestClose: function onRequestClose() {\n      setTextModalVisible(!isTextModalVisible);\n    },\n    children: _jsx(View, {\n      style: styles.inputText,\n      children: _jsxs(View, {\n        style: styles.modalInputText,\n        children: [_jsxs(View, {\n          style: styles.dropdownContainer,\n          children: [_jsx(FontSizeDropdown, {\n            style: styles.dropdownItem,\n            value: fontSize,\n            onFontSizeChange: function onFontSizeChange(value) {\n              return setFontSize(value);\n            }\n          }), _jsx(FontColorDropdown, {\n            style: styles.dropdownItem,\n            color: textColor,\n            onFontColorChange: function onFontColorChange(color) {\n              return setTextColor(color);\n            }\n          }), _jsx(FontFamilyDropdown, {\n            style: styles.dropdownItem,\n            fontFamily: fontFamily,\n            onFontFamilyChange: function onFontFamilyChange(font) {\n              return setFontFamily(font);\n            }\n          })]\n        }), _jsx(TextInput, {\n          value: text,\n          onChangeText: setText,\n          placeholder: \"F\\xFCge Text hinzu\",\n          multiline: true,\n          style: {\n            color: textColor,\n            fontSize: fontSize,\n            fontFamily: fontFamily,\n            width: '100%',\n            borderColor: '#ccc',\n            borderWidth: 1,\n            marginBottom: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          style: {\n            marginTop: 10\n          },\n          onPress: function onPress() {\n            setTextModalVisible(!isTextModalVisible);\n          },\n          children: _jsx(FontAwesome5, {\n            name: \"check\",\n            size: 24,\n            color: \"black\"\n          })\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  inputText: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    marginTop: -100\n  },\n  modalInputText: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: \"white\",\n    padding: 35,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 20\n  },\n  dropdownItem: {\n    width: '30%',\n    margin: 5\n  }\n});","map":{"version":3,"names":["React","View","TextInput","TouchableOpacity","Modal","StyleSheet","FontAwesome5","FontColorDropdown","FontFamilyDropdown","FontSizeDropdown","jsx","_jsx","jsxs","_jsxs","TextEditor","_ref","isTextModalVisible","setTextModalVisible","text","setText","textColor","setTextColor","fontFamily","setFontFamily","fontSize","setFontSize","animationType","transparent","visible","onRequestClose","children","style","styles","inputText","modalInputText","dropdownContainer","dropdownItem","value","onFontSizeChange","color","onFontColorChange","onFontFamilyChange","font","onChangeText","placeholder","multiline","width","borderColor","borderWidth","marginBottom","marginTop","onPress","name","size","create","flex","justifyContent","alignItems","backgroundColor","height","padding","flexDirection","margin"],"sources":["/home/dci-student/DCIFolder/WAppV2/WeddingApp2.0/comp/Camera/TextEditor.js"],"sourcesContent":["// TextEditor.js\nimport React from 'react';\nimport { View, TextInput, TouchableOpacity, Modal, StyleSheet } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { FontColorDropdown } from './fontHandler/FontColorDropdown.js';\nimport { FontFamilyDropdown } from './fontHandler/FontFamilyDropdown.js';\nimport { FontSizeDropdown } from './fontHandler/FontSizeDropdown.js';\n\nexport function TextEditor({ \n    isTextModalVisible, \n    setTextModalVisible, \n    text, \n    setText, \n    textColor, \n    setTextColor, \n    fontFamily, \n    setFontFamily, \n    fontSize, \n    setFontSize \n}) {\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={isTextModalVisible}\n            onRequestClose={() => {\n                setTextModalVisible(!isTextModalVisible);\n            }}\n        >\n            <View style={styles.inputText}>\n                <View style={styles.modalInputText}>\n                    <View style={styles.dropdownContainer}>\n                        <FontSizeDropdown \n                            style={styles.dropdownItem}\n                            value={fontSize}\n                            onFontSizeChange={value => setFontSize(value)}\n                        />\n                        <FontColorDropdown \n                            style={styles.dropdownItem}\n                            color={textColor}\n                            onFontColorChange={color => setTextColor(color)}\n                        />\n                        <FontFamilyDropdown \n                            style={styles.dropdownItem}\n                            fontFamily={fontFamily}\n                            onFontFamilyChange={font => setFontFamily(font)}\n                        />\n                    </View>\n                    <TextInput\n                        value={text}\n                        onChangeText={setText}\n                        placeholder=\"Füge Text hinzu\"\n                        multiline={true}\n                        style={{ \n                            color: textColor, \n                            fontSize: fontSize, \n                            fontFamily: fontFamily, \n                            width: '100%',\n                            borderColor: '#ccc',\n                            borderWidth: 1,\n                            marginBottom: 20,\n                        }}\n                    />\n                    <TouchableOpacity\n                        style={{ marginTop: 10 }}\n                        onPress={() => {\n                            setTextModalVisible(!isTextModalVisible);\n                        }}\n                    >\n                        <FontAwesome5 name=\"check\" size={24} color=\"black\" />\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputText: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: 'rgba(0,0,0,0.8)',  // Semi-transparenter Hintergrund\n    marginTop: -100,  // Um das Modal nach oben zu verschieben\n    },\n    modalInputText: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: \"white\",\n    padding: 35,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    },\n    dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 20,  // Abstand zwischen den Dropdowns und dem Input-Feld               \n    },\n    dropdownItem: {  // Neuer Stil für die einzelnen Dropdowns\n        width: '30%',  // Gib jeder Dropdown 30% der Breite\n        margin: 5,  // Ein bisschen Abstand zwischen den Dropdowns\n    },\n});\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,iBAAiB;AAC1B,SAASC,kBAAkB;AAC3B,SAASC,gBAAgB;AAA4C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAWvB;EAAA,IAVCC,kBAAkB,GAAAD,IAAA,CAAlBC,kBAAkB;IAClBC,mBAAmB,GAAAF,IAAA,CAAnBE,mBAAmB;IACnBC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IACJC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IACPC,SAAS,GAAAL,IAAA,CAATK,SAAS;IACTC,YAAY,GAAAN,IAAA,CAAZM,YAAY;IACZC,UAAU,GAAAP,IAAA,CAAVO,UAAU;IACVC,aAAa,GAAAR,IAAA,CAAbQ,aAAa;IACbC,QAAQ,GAAAT,IAAA,CAARS,QAAQ;IACRC,WAAW,GAAAV,IAAA,CAAXU,WAAW;EAEX,OACId,IAAA,CAACP,KAAK;IACFsB,aAAa,EAAC,OAAO;IACrBC,WAAW,EAAE,IAAK;IAClBC,OAAO,EAAEZ,kBAAmB;IAC5Ba,cAAc,EAAE,SAAAA,eAAA,EAAM;MAClBZ,mBAAmB,CAAC,CAACD,kBAAkB,CAAC;IAC5C,CAAE;IAAAc,QAAA,EAEFnB,IAAA,CAACV,IAAI;MAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,EAC1BjB,KAAA,CAACZ,IAAI;QAAC8B,KAAK,EAAEC,MAAM,CAACE,cAAe;QAAAJ,QAAA,GAC/BjB,KAAA,CAACZ,IAAI;UAAC8B,KAAK,EAAEC,MAAM,CAACG,iBAAkB;UAAAL,QAAA,GAClCnB,IAAA,CAACF,gBAAgB;YACbsB,KAAK,EAAEC,MAAM,CAACI,YAAa;YAC3BC,KAAK,EAAEb,QAAS;YAChBc,gBAAgB,EAAE,SAAAA,iBAAAD,KAAK;cAAA,OAAIZ,WAAW,CAACY,KAAK,CAAC;YAAA;UAAC,CACjD,CAAC,EACF1B,IAAA,CAACJ,iBAAiB;YACdwB,KAAK,EAAEC,MAAM,CAACI,YAAa;YAC3BG,KAAK,EAAEnB,SAAU;YACjBoB,iBAAiB,EAAE,SAAAA,kBAAAD,KAAK;cAAA,OAAIlB,YAAY,CAACkB,KAAK,CAAC;YAAA;UAAC,CACnD,CAAC,EACF5B,IAAA,CAACH,kBAAkB;YACfuB,KAAK,EAAEC,MAAM,CAACI,YAAa;YAC3Bd,UAAU,EAAEA,UAAW;YACvBmB,kBAAkB,EAAE,SAAAA,mBAAAC,IAAI;cAAA,OAAInB,aAAa,CAACmB,IAAI,CAAC;YAAA;UAAC,CACnD,CAAC;QAAA,CACA,CAAC,EACP/B,IAAA,CAACT,SAAS;UACNmC,KAAK,EAAEnB,IAAK;UACZyB,YAAY,EAAExB,OAAQ;UACtByB,WAAW,EAAC,oBAAiB;UAC7BC,SAAS,EAAE,IAAK;UAChBd,KAAK,EAAE;YACHQ,KAAK,EAAEnB,SAAS;YAChBI,QAAQ,EAAEA,QAAQ;YAClBF,UAAU,EAAEA,UAAU;YACtBwB,KAAK,EAAE,MAAM;YACbC,WAAW,EAAE,MAAM;YACnBC,WAAW,EAAE,CAAC;YACdC,YAAY,EAAE;UAClB;QAAE,CACL,CAAC,EACFtC,IAAA,CAACR,gBAAgB;UACb4B,KAAK,EAAE;YAAEmB,SAAS,EAAE;UAAG,CAAE;UACzBC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACXlC,mBAAmB,CAAC,CAACD,kBAAkB,CAAC;UAC5C,CAAE;UAAAc,QAAA,EAEFnB,IAAA,CAACL,YAAY;YAAC8C,IAAI,EAAC,OAAO;YAACC,IAAI,EAAE,EAAG;YAACd,KAAK,EAAC;UAAO,CAAE;QAAC,CACvC,CAAC;MAAA,CACjB;IAAC,CACL;EAAC,CACJ,CAAC;AAEhB;AAEA,IAAMP,MAAM,GAAG3B,UAAU,CAACiD,MAAM,CAAC;EAC7BrB,SAAS,EAAE;IACXsB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,iBAAiB;IAClCR,SAAS,EAAE,CAAC;EACZ,CAAC;EACDhB,cAAc,EAAE;IAChBY,KAAK,EAAE,MAAM;IACba,MAAM,EAAE,MAAM;IACdD,eAAe,EAAE,OAAO;IACxBE,OAAO,EAAE,EAAE;IACXJ,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACZ,CAAC;EACDtB,iBAAiB,EAAE;IACnB0B,aAAa,EAAE,KAAK;IACpBL,cAAc,EAAE,eAAe;IAC/BV,KAAK,EAAE,MAAM;IACbG,YAAY,EAAE;EACd,CAAC;EACDb,YAAY,EAAE;IACVU,KAAK,EAAE,KAAK;IACZgB,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
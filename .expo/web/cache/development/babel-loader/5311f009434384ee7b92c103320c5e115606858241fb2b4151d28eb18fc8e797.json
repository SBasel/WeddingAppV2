{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useLoadFonts, fontMap } from \"../../fonts/useLoadFonts.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function FontFamilyDropdown(_ref) {\n  var onFontFamilyChange = _ref.onFontFamilyChange;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    googleFonts = _useState4[0],\n    setGoogleFonts = _useState4[1];\n  var fontsLoaded = useLoadFonts();\n  useEffect(function () {\n    if (fontsLoaded) {\n      var localFonts = Object.keys(fontMap);\n      setGoogleFonts(localFonts);\n    }\n  }, [fontsLoaded]);\n  return _jsxs(View, {\n    style: styles.dropdownContainer,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.iconDropdown,\n      onPress: toggleDropdown,\n      children: _jsx(FontAwesome5, {\n        name: \"font\",\n        size: 24,\n        color: \"black\"\n      })\n    }), isOpen && _jsx(View, {\n      style: styles.dropdownMenu,\n      children: _jsx(FlatList, {\n        data: googleFonts,\n        renderItem: function renderItem(_ref2) {\n          var font = _ref2.item;\n          return _jsx(TouchableOpacity, {\n            style: styles.dropdownList,\n            onPress: function onPress() {\n              onFontFamilyChange(font);\n              setIsOpen(false);\n            },\n            children: _jsx(Text, {\n              style: {\n                fontFamily: font\n              },\n              children: font\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(font) {\n          return font;\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  dropdownContainer: {\n    flexDirection: 'row'\n  },\n  iconDropdown: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: '#f5f5f5'\n  },\n  dropdownMenu: {\n    maxHeight: 150,\n    overflow: 'scroll',\n    borderRadius: 8,\n    shadowOpacity: 0.1,\n    shadowRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    backgroundColor: '#fff',\n    padding: 10\n  },\n  dropdownList: {\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","FlatList","Dimensions","StyleSheet","axios","FontAwesome5","useLoadFonts","fontMap","jsx","_jsx","jsxs","_jsxs","FontFamilyDropdown","_ref","onFontFamilyChange","_useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","googleFonts","setGoogleFonts","fontsLoaded","localFonts","Object","keys","style","styles","dropdownContainer","children","iconDropdown","onPress","toggleDropdown","name","size","color","dropdownMenu","data","renderItem","_ref2","font","item","dropdownList","fontFamily","keyExtractor","create","flexDirection","width","height","borderRadius","backgroundColor","maxHeight","overflow","shadowOpacity","shadowRadius","shadowColor","shadowOffset","padding"],"sources":["/home/dci-student/DCIFolder/WAppV2/WeddingApp2.0/comp/Camera/fontHandler/FontFamilyDropdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, FlatList, Dimensions, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useLoadFonts, fontMap } from '../../fonts/useLoadFonts.js'\n\n\nexport function FontFamilyDropdown({ onFontFamilyChange }) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [googleFonts, setGoogleFonts] = useState([]);\n    const fontsLoaded = useLoadFonts();\n\n\n    useEffect(() => {\n  if (fontsLoaded) {\n    const localFonts = Object.keys(fontMap); // Holt die Namen der Schriftarten aus fontMap\n    setGoogleFonts(localFonts);\n  }\n}, [fontsLoaded]);\n\n\n    return (\n        <View style={styles.dropdownContainer}>\n            <TouchableOpacity style={styles.iconDropdown} onPress={toggleDropdown}>\n                <FontAwesome5 name=\"font\" size={24} color=\"black\" />\n            </TouchableOpacity>\n\n            {isOpen && (\n                <View style={styles.dropdownMenu}>\n                    <FlatList\n                        data={googleFonts}\n                        renderItem={({ item: font }) => (\n                            <TouchableOpacity\n                                style={styles.dropdownList}\n                                onPress={() => {\n                                    onFontFamilyChange(font);\n                                    setIsOpen(false);\n                                }}\n                            >\n                                <Text style={{ fontFamily: font }}>{font}</Text>\n                            </TouchableOpacity>\n                        )}\n                        keyExtractor={(font) => font}\n                    />\n                </View>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    dropdownContainer: {\n        flexDirection: 'row',\n    },\n    iconDropdown: {\n        width: 32,\n        height: 32,\n        borderRadius: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    dropdownMenu: {\n        maxHeight: 150,\n        overflow: 'scroll',\n        borderRadius: 8,\n        shadowOpacity: 0.1,\n        shadowRadius: 10,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        backgroundColor: '#fff',\n        padding: 10,\n    },\n    dropdownList: {\n        padding: 10,\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
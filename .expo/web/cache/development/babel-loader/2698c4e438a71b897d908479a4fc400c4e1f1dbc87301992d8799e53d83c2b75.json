{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Home } from \"./comp/Home\";\nimport { SignUp } from \"./comp/SignUp\";\nimport App from \"./App\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport function RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: function options(_ref) {\n        var navigation = _ref.navigation;\n        return {\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: styles.buttonsContainer,\n              children: [_jsx(Pressable, {\n                onPress: function onPress() {\n                  return navigation.navigate('Login');\n                },\n                style: function style(_ref2) {\n                  var pressed = _ref2.pressed;\n                  return [styles.button, {\n                    backgroundColor: pressed ? '#0056b3' : '#007BFF'\n                  }];\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Login\"\n                })\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  return navigation.navigate('SignUp');\n                },\n                style: function style(_ref3) {\n                  var pressed = _ref3.pressed;\n                  return [styles.button, {\n                    backgroundColor: pressed ? '#227a4f' : '#28a745',\n                    marginLeft: 10\n                  }];\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"SignUp\"\n                })\n              })]\n            });\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: App\n    }), _jsx(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUp\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15,\n    paddingBottom: 10\n  },\n  heading: {\n    fontSize: 24\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  button: {\n    marginHorizontal: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 5,\n    backgroundColor: '#007BFF'\n  },\n  buttonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","createStackNavigator","Home","SignUp","App","View","Text","StyleSheet","Pressable","jsx","_jsx","jsxs","_jsxs","Stack","RootNavigator","Navigator","initialRouteName","children","Screen","name","component","options","_ref","navigation","headerRight","style","styles","buttonsContainer","onPress","navigate","_ref2","pressed","button","backgroundColor","buttonText","_ref3","marginLeft","create","container","flex","alignItems","justifyContent","header","width","flexDirection","paddingHorizontal","paddingBottom","heading","fontSize","marginHorizontal","paddingVertical","borderRadius","color"],"sources":["/home/dci-student/DCIFolder/TMSII/my-app/RootNavigator.js"],"sourcesContent":["\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Home } from './comp/Home';\nimport { SignUp } from './comp/SignUp';\nimport App from './App';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\n\n\nconst Stack = createStackNavigator();\n\nexport function RootNavigator() {\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen \n        name=\"Home\" \n        component={Home}\n        options={({ navigation }) => ({\n          headerRight: () => (\n            <View style={styles.buttonsContainer}>\n              <Pressable \n                onPress={() => navigation.navigate('Login')}\n                style={({ pressed }) => [\n                  styles.button,\n                  { backgroundColor: pressed ? '#0056b3' : '#007BFF' }\n                ]}\n              >\n                <Text style={styles.buttonText}>Login</Text>\n              </Pressable>\n              <Pressable \n                onPress={() => navigation.navigate('SignUp')}\n                style={({ pressed }) => [\n                  styles.button,\n                  { backgroundColor: pressed ? '#227a4f' : '#28a745', marginLeft: 10 }\n                ]}\n              >\n                <Text style={styles.buttonText}>SignUp</Text>\n              </Pressable>\n            </View>\n          ),\n        })}\n      />\n      <Stack.Screen name=\"Login\" component={App} />\n      <Stack.Screen name=\"SignUp\" component={SignUp} />\n    </Stack.Navigator>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15,\n    paddingBottom: 10\n  },\n  heading: {\n    fontSize: 24,\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n  },\n  button: {\n    marginHorizontal: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 5,\n    backgroundColor: '#007BFF',\n  },\n  buttonText: {\n    color: 'white',\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}